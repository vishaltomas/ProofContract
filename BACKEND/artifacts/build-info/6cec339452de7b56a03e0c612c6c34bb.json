{"id":"6cec339452de7b56a03e0c612c6c34bb","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/AffidavitSign.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\r\n\r\nerror Nonce_Is_Used();\r\nerror SignerAddress_Recovery_Failed();\r\nerror Invalid_Signature_By_Owner();\r\n// error Invalid_Recepient_Address();\r\n\r\ncontract AffidavitSign{\r\n    \r\n    using SignatureChecker for *;\r\n    using ECDSA for *;\r\n\r\n// Event is emitted when Owner's signature is verified\r\n    event SignatureVerified(address owner, address recepient, bytes32 msghash);\r\n// Event is emitted when Recepient signed the document successfully\r\n    event RecepientSigned(address from, address to, bytes32 ipfshash, bytes32 filehash);\r\n\r\n    address immutable i_owner;\r\n    address private i_recepient;\r\n    mapping(uint256 => bool) private nonceBurned;\r\n    \r\n    constructor(){\r\n        i_owner = msg.sender;\r\n    }\r\n\r\n    function mainSignProcess(\r\n        bytes memory signature,\r\n        uint256 nonce,\r\n        bytes32 ipfs_hash,\r\n        bytes8 msgId,\r\n        bytes32 filehash\r\n    ) public{\r\n        // storing caller address\r\n        i_recepient = msg.sender;\r\n        //Verifying message\r\n        messageVerify( signature, nonce, ipfs_hash, msgId);\r\n        //If message is verified sign the document\r\n        docuSign(ipfs_hash, filehash);\r\n    }\r\n\r\n    function messageVerify(\r\n        bytes memory signature,\r\n        uint256 nonce,\r\n        bytes32 ipfs_hash,\r\n        bytes8 msgId\r\n        ) internal{\r\n        //variables\r\n        ECDSA.RecoverError errorRecoverSigner;\r\n        address signer;\r\n        //recreate hash \r\n        bytes32 message_hash = recreateMessage(nonce, ipfs_hash, msgId);\r\n        //recover signer address \r\n        (signer, errorRecoverSigner) = ECDSA.tryRecover(message_hash, signature);\r\n        if(errorRecoverSigner != ECDSA.RecoverError.NoError) revert SignerAddress_Recovery_Failed();\r\n        //Verify signature\r\n        bool isValidSign = SignatureChecker.isValidSignatureNow(signer, message_hash, signature);\r\n        if(!isValidSign) revert Invalid_Signature_By_Owner();\r\n        // emits Signature Verified event\r\n        emit SignatureVerified(i_owner, i_recepient, message_hash);\r\n        \r\n    }\r\n\r\n    function docuSign(bytes32 ipfs_hash, bytes32 filehash) internal{\r\n        emit RecepientSigned(i_owner, i_recepient, ipfs_hash, filehash);        \r\n    }\r\n \r\n\r\n    function recreateMessage(\r\n        uint256 nonce,\r\n        bytes32 ipfs_hash,  \r\n        bytes8 msgId       \r\n    ) internal returns(bytes32){\r\n        //Check whther nonce is used,if it is revert the transaction, if not add to nonceBurned mapping\r\n        if(!nonceBurned[nonce]) revert Nonce_Is_Used();\r\n        nonceBurned[nonce] = true;\r\n        //recreate Messgae\r\n        return keccak256(abi.encodePacked(msgId, ipfs_hash, nonce, address(msg.sender), address(this)));\r\n    }\r\n    \r\n    // getters\r\n    \r\n    function getOwnerOfContract() view public returns(address){\r\n        return i_owner;\r\n    }\r\n\r\n}"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.1) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Gnosis Safe.\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature);\n        if (error == ECDSA.RecoverError.NoError && recovered == signer) {\n            return true;\n        }\n\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature)\n        );\n        return (success &&\n            result.length == 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[13]},"id":14,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"117:189:0","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":13,"linearizedBaseContracts":[13],"name":"IERC1271","nameLocation":"317:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"332:220:0","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"566:16:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"hash","nameLocation":"591:4:0","nodeType":"VariableDeclaration","scope":12,"src":"583:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"signature","nameLocation":"610:9:0","nodeType":"VariableDeclaration","scope":12,"src":"597:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:38:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"magicValue","nameLocation":"651:10:0","nodeType":"VariableDeclaration","scope":12,"src":"644:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:19:0"},"scope":13,"src":"557:106:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":14,"src":"307:358:0","usedErrors":[]}],"src":"92:574:0"},"id":0},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[308]},"id":309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"126:67:1","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":308,"linearizedBaseContracts":[308],"name":"Address","nameLocation":"202:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":30,"nodeType":"Block","src":"1241:254:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":24,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"1465:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":23,"id":29,"nodeType":"Return","src":"1458:30:1"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"216:954:1","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":31,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:1","nodeType":"FunctionDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"account","nameLocation":"1203:7:1","nodeType":"VariableDeclaration","scope":31,"src":"1195:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:1"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31,"src":"1235:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":21,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:1"},"scope":308,"src":"1175:320:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":64,"nodeType":"Block","src":"2483:241:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":42,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$308","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$308","typeString":"library Address"}],"id":41,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:1","typeDescriptions":{}}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":45,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"2526:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":39,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49,"nodeType":"ExpressionStatement","src":"2493:73:1"},{"assignments":[51,null],"declarations":[{"constant":false,"id":51,"mutability":"mutable","name":"success","nameLocation":"2583:7:1","nodeType":"VariableDeclaration","scope":64,"src":"2578:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":50,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":58,"initialValue":{"arguments":[{"hexValue":"","id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":52,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"2596:9:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":54,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"2618:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:1"},{"expression":{"arguments":[{"id":60,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2647:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":59,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63,"nodeType":"ExpressionStatement","src":"2639:78:1"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1501:906:1","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":65,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:1","nodeType":"VariableDeclaration","scope":65,"src":"2431:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"amount","nameLocation":"2466:6:1","nodeType":"VariableDeclaration","scope":65,"src":"2458:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:1"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"2483:0:1"},"scope":308,"src":"2412:312:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"3555:84:1","statements":[{"expression":{"arguments":[{"id":76,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"3585:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":77,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"3593:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":75,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[82,102],"referencedDeclaration":102,"src":"3572:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":74,"id":80,"nodeType":"Return","src":"3565:67:1"}]},"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"2730:731:1","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":82,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:1","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"mutability":"mutable","name":"target","nameLocation":"3496:6:1","nodeType":"VariableDeclaration","scope":82,"src":"3488:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"mutability":"mutable","name":"data","nameLocation":"3517:4:1","nodeType":"VariableDeclaration","scope":82,"src":"3504:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":69,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:1"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82,"src":"3541:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":72,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:1"},"scope":308,"src":"3466:173:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":101,"nodeType":"Block","src":"4008:76:1","statements":[{"expression":{"arguments":[{"id":95,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"4047:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":96,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"4055:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":98,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"4064:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":94,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[122,172],"referencedDeclaration":172,"src":"4025:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":93,"id":100,"nodeType":"Return","src":"4018:59:1"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"3645:211:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":102,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"target","nameLocation":"3900:6:1","nodeType":"VariableDeclaration","scope":102,"src":"3892:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"data","nameLocation":"3929:4:1","nodeType":"VariableDeclaration","scope":102,"src":"3916:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:1","nodeType":"VariableDeclaration","scope":102,"src":"3943:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":88,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:1"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":102,"src":"3994:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":91,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:1"},"scope":308,"src":"3861:223:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":121,"nodeType":"Block","src":"4589:111:1","statements":[{"expression":{"arguments":[{"id":115,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"4628:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":116,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"4636:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"4642:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":114,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[122,172],"referencedDeclaration":172,"src":"4606:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":113,"id":120,"nodeType":"Return","src":"4599:94:1"}]},"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"4090:351:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:1","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"target","nameLocation":"4494:6:1","nodeType":"VariableDeclaration","scope":122,"src":"4486:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"data","nameLocation":"4523:4:1","nodeType":"VariableDeclaration","scope":122,"src":"4510:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":106,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"value","nameLocation":"4545:5:1","nodeType":"VariableDeclaration","scope":122,"src":"4537:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:1"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":122,"src":"4575:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":111,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:1"},"scope":308,"src":"4446:254:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":171,"nodeType":"Block","src":"5127:320:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":139,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$308","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$308","typeString":"library Address"}],"id":138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:1","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5170:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"5137:81:1"},{"expression":{"arguments":[{"arguments":[{"id":149,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"5247:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":148,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"5236:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":153,"nodeType":"ExpressionStatement","src":"5228:60:1"},{"assignments":[155,157],"declarations":[{"constant":false,"id":155,"mutability":"mutable","name":"success","nameLocation":"5305:7:1","nodeType":"VariableDeclaration","scope":171,"src":"5300:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:1","nodeType":"VariableDeclaration","scope":171,"src":"5314:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":156,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":164,"initialValue":{"arguments":[{"id":162,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"5367:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":158,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"5341:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5360:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:1"},{"expression":{"arguments":[{"id":166,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"5406:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":167,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"5415:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":168,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"5427:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":165,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5389:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":135,"id":170,"nodeType":"Return","src":"5382:58:1"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"4706:237:1","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":172,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"target","nameLocation":"4996:6:1","nodeType":"VariableDeclaration","scope":172,"src":"4988:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"data","nameLocation":"5025:4:1","nodeType":"VariableDeclaration","scope":172,"src":"5012:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"value","nameLocation":"5047:5:1","nodeType":"VariableDeclaration","scope":172,"src":"5039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:1","nodeType":"VariableDeclaration","scope":172,"src":"5062:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":130,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":172,"src":"5113:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":133,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:1"},"scope":308,"src":"4948:499:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":188,"nodeType":"Block","src":"5724:97:1","statements":[{"expression":{"arguments":[{"id":183,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"5760:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":184,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"5768:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":182,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[189,224],"referencedDeclaration":224,"src":"5741:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":181,"id":187,"nodeType":"Return","src":"5734:80:1"}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"5453:166:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":189,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"target","nameLocation":"5660:6:1","nodeType":"VariableDeclaration","scope":189,"src":"5652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"data","nameLocation":"5681:4:1","nodeType":"VariableDeclaration","scope":189,"src":"5668:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":176,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"5710:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":179,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:1"},"scope":308,"src":"5624:197:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":223,"nodeType":"Block","src":"6163:228:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":203,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6192:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":202,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"6181:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6173:67:1"},{"assignments":[209,211],"declarations":[{"constant":false,"id":209,"mutability":"mutable","name":"success","nameLocation":"6257:7:1","nodeType":"VariableDeclaration","scope":223,"src":"6252:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":208,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:1","nodeType":"VariableDeclaration","scope":223,"src":"6266:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":210,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":216,"initialValue":{"arguments":[{"id":214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"6311:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":212,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6293:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:1"},{"expression":{"arguments":[{"id":218,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"6350:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":219,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6359:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":220,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"6371:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":217,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6333:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":200,"id":222,"nodeType":"Return","src":"6326:58:1"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5827:173:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":224,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:1","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"target","nameLocation":"6050:6:1","nodeType":"VariableDeclaration","scope":224,"src":"6042:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"data","nameLocation":"6079:4:1","nodeType":"VariableDeclaration","scope":224,"src":"6066:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":193,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:1","nodeType":"VariableDeclaration","scope":224,"src":"6093:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":195,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:1"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"6149:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:1"},"scope":308,"src":"6005:386:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":240,"nodeType":"Block","src":"6667:101:1","statements":[{"expression":{"arguments":[{"id":235,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"6705:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":236,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6713:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":234,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[241,276],"referencedDeclaration":276,"src":"6684:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":233,"id":239,"nodeType":"Return","src":"6677:84:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"6397:168:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":241,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:1","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"target","nameLocation":"6608:6:1","nodeType":"VariableDeclaration","scope":241,"src":"6600:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"data","nameLocation":"6629:4:1","nodeType":"VariableDeclaration","scope":241,"src":"6616:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":228,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:1"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":241,"src":"6653:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":231,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:1"},"scope":308,"src":"6570:198:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"7109:232:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":255,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"7138:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":254,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"7127:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"7119:69:1"},{"assignments":[261,263],"declarations":[{"constant":false,"id":261,"mutability":"mutable","name":"success","nameLocation":"7205:7:1","nodeType":"VariableDeclaration","scope":275,"src":"7200:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":260,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:1","nodeType":"VariableDeclaration","scope":275,"src":"7214:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":262,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":268,"initialValue":{"arguments":[{"id":266,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"7261:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":264,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"7241:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:1","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:1"},{"expression":{"arguments":[{"id":270,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7300:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":271,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"7309:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":272,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7321:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":269,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7283:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":252,"id":274,"nodeType":"Return","src":"7276:58:1"}]},"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"6774:175:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:1","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"target","nameLocation":"7001:6:1","nodeType":"VariableDeclaration","scope":276,"src":"6993:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"data","nameLocation":"7030:4:1","nodeType":"VariableDeclaration","scope":276,"src":"7017:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":245,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:1","nodeType":"VariableDeclaration","scope":276,"src":"7044:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:1"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"7095:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":250,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:1"},"scope":308,"src":"6954:387:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":306,"nodeType":"Block","src":"7721:582:1","statements":[{"condition":{"id":288,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7735:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":304,"nodeType":"Block","src":"7792:505:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":292,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"7876:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":302,"nodeType":"Block","src":"8234:53:1","statements":[{"expression":{"arguments":[{"id":299,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"8259:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":298,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"ExpressionStatement","src":"8252:20:1"}]},"id":303,"nodeType":"IfStatement","src":"7872:415:1","trueBody":{"id":297,"nodeType":"Block","src":"7899:329:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:1","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:1","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:1"},"nodeType":"YulFunctionCall","src":"8114:17:1"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:1","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:1"},"nodeType":"YulFunctionCall","src":"8159:19:1"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:1"},"nodeType":"YulFunctionCall","src":"8152:44:1"},"nodeType":"YulExpressionStatement","src":"8152:44:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":281,"isOffset":false,"isSlot":false,"src":"8120:10:1","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"8167:10:1","valueSize":1}],"id":296,"nodeType":"InlineAssembly","src":"8060:154:1"}]}}]},"id":305,"nodeType":"IfStatement","src":"7731:566:1","trueBody":{"id":291,"nodeType":"Block","src":"7744:42:1","statements":[{"expression":{"id":289,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"7765:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":287,"id":290,"nodeType":"Return","src":"7758:17:1"}]}}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"7347:209:1","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":307,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"success","nameLocation":"7601:7:1","nodeType":"VariableDeclaration","scope":307,"src":"7596:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":278,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:1","nodeType":"VariableDeclaration","scope":307,"src":"7618:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":280,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:1","nodeType":"VariableDeclaration","scope":307,"src":"7651:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":282,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":307,"src":"7707:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":285,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:1"},"scope":308,"src":"7561:742:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":309,"src":"194:8111:1","usedErrors":[]}],"src":"101:8205:1"},"id":1},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[534]},"id":535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":310,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"126:34:2","text":" @dev String operations."},"fullyImplemented":true,"id":534,"linearizedBaseContracts":[534],"name":"Strings","nameLocation":"169:7:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":314,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:2","nodeType":"VariableDeclaration","scope":534,"src":"183:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":312,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:2","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":317,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:2","nodeType":"VariableDeclaration","scope":534,"src":"247:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":315,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":395,"nodeType":"Block","src":"463:632:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"665:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":331,"nodeType":"IfStatement","src":"661:51:2","trueBody":{"id":330,"nodeType":"Block","src":"677:35:2","statements":[{"expression":{"hexValue":"30","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":324,"id":329,"nodeType":"Return","src":"691:10:2"}]}},{"assignments":[333],"declarations":[{"constant":false,"id":333,"mutability":"mutable","name":"temp","nameLocation":"729:4:2","nodeType":"VariableDeclaration","scope":395,"src":"721:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":335,"initialValue":{"id":334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"736:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:2"},{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"digits","nameLocation":"759:6:2","nodeType":"VariableDeclaration","scope":395,"src":"751:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":338,"nodeType":"VariableDeclarationStatement","src":"751:14:2"},{"body":{"id":349,"nodeType":"Block","src":"793:57:2","statements":[{"expression":{"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:2","subExpression":{"id":342,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"807:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":344,"nodeType":"ExpressionStatement","src":"807:8:2"},{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"829:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":348,"nodeType":"ExpressionStatement","src":"829:10:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"782:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":350,"nodeType":"WhileStatement","src":"775:75:2"},{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"buffer","nameLocation":"872:6:2","nodeType":"VariableDeclaration","scope":395,"src":"859:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":351,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":357,"initialValue":{"arguments":[{"id":355,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"891:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":353,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:2"},{"body":{"id":388,"nodeType":"Block","src":"927:131:2","statements":[{"expression":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":361,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"941:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":364,"nodeType":"ExpressionStatement","src":"941:11:2"},{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":365,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"966:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":367,"indexExpression":{"id":366,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"973:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:2","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1009:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:2","typeDescriptions":{}}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":370,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:2","typeDescriptions":{}}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":368,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:2","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":383,"nodeType":"ExpressionStatement","src":"966:56:2"},{"expression":{"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1036:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:2","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":387,"nodeType":"ExpressionStatement","src":"1036:11:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"915:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":389,"nodeType":"WhileStatement","src":"908:150:2"},{"expression":{"arguments":[{"id":392,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1081:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":390,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:2","typeDescriptions":{}}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":324,"id":394,"nodeType":"Return","src":"1067:21:2"}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"297:90:2","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":396,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:2","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"value","nameLocation":"418:5:2","nodeType":"VariableDeclaration","scope":396,"src":"410:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:2"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"448:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":322,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:2"},"scope":534,"src":"392:703:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1274:255:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1288:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":410,"nodeType":"IfStatement","src":"1284:54:2","trueBody":{"id":409,"nodeType":"Block","src":"1300:38:2","statements":[{"expression":{"hexValue":"30783030","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":403,"id":408,"nodeType":"Return","src":"1314:13:2"}]}},{"assignments":[412],"declarations":[{"constant":false,"id":412,"mutability":"mutable","name":"temp","nameLocation":"1355:4:2","nodeType":"VariableDeclaration","scope":436,"src":"1347:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":414,"initialValue":{"id":413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1362:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:2"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"length","nameLocation":"1385:6:2","nodeType":"VariableDeclaration","scope":436,"src":"1377:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":418,"initialValue":{"hexValue":"30","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:2"},{"body":{"id":429,"nodeType":"Block","src":"1423:57:2","statements":[{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:2","subExpression":{"id":422,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1437:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":424,"nodeType":"ExpressionStatement","src":"1437:8:2"},{"expression":{"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":425,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1459:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":428,"nodeType":"ExpressionStatement","src":"1459:10:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":419,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1412:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"WhileStatement","src":"1405:75:2"},{"expression":{"arguments":[{"id":432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1508:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":433,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1515:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":431,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[437,513,533],"referencedDeclaration":513,"src":"1496:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":403,"id":435,"nodeType":"Return","src":"1489:33:2"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"1101:94:2","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":437,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"value","nameLocation":"1229:5:2","nodeType":"VariableDeclaration","scope":437,"src":"1221:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:2"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"1259:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":401,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:2"},"scope":534,"src":"1200:329:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":512,"nodeType":"Block","src":"1742:351:2","statements":[{"assignments":[448],"declarations":[{"constant":false,"id":448,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:2","nodeType":"VariableDeclaration","scope":512,"src":"1752:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":447,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":457,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":452,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1788:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:2"},{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":458,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1809:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":460,"indexExpression":{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":463,"nodeType":"ExpressionStatement","src":"1809:15:2"},{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":464,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1834:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":466,"indexExpression":{"hexValue":"31","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":469,"nodeType":"ExpressionStatement","src":"1834:15:2"},{"body":{"id":498,"nodeType":"Block","src":"1904:87:2","statements":[{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":484,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1918:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":486,"indexExpression":{"id":485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"1925:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":487,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1930:12:2","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":491,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1943:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:2","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":493,"nodeType":"ExpressionStatement","src":"1918:37:2"},{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1969:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"nodeType":"ExpressionStatement","src":"1969:11:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":478,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"1892:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"initializationExpression":{"assignments":[471],"declarations":[{"constant":false,"id":471,"mutability":"mutable","name":"i","nameLocation":"1872:1:2","nodeType":"VariableDeclaration","scope":499,"src":"1864:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":477,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":473,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1880:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:2"},"loopExpression":{"expression":{"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:2","subExpression":{"id":481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"1901:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":483,"nodeType":"ExpressionStatement","src":"1899:3:2"},"nodeType":"ForStatement","src":"1859:132:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2008:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"2000:55:2"},{"expression":{"arguments":[{"id":509,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2079:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":507,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:2","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":446,"id":511,"nodeType":"Return","src":"2065:21:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1535:112:2","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":513,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:2","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"value","nameLocation":"1681:5:2","nodeType":"VariableDeclaration","scope":513,"src":"1673:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"length","nameLocation":"1696:6:2","nodeType":"VariableDeclaration","scope":513,"src":"1688:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":513,"src":"1727:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":444,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:2"},"scope":534,"src":"1652:441:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":532,"nodeType":"Block","src":"2318:76:2","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":526,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2363:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":524,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:2","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:2","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":529,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2371:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":521,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[437,513,533],"referencedDeclaration":513,"src":"2335:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":520,"id":531,"nodeType":"Return","src":"2328:59:2"}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"2099:141:2","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":533,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:2","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"addr","nameLocation":"2274:4:2","nodeType":"VariableDeclaration","scope":533,"src":"2266:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":533,"src":"2303:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":518,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:2"},"scope":534,"src":"2245:149:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":535,"src":"161:2235:2","usedErrors":[]}],"src":"101:2296:2"},"id":2},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[922],"Strings":[534]},"id":923,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":536,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":923,"sourceUnit":535,"src":"137:24:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"163:205:3","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":922,"linearizedBaseContracts":[922],"name":"ECDSA","nameLocation":"377:5:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":544,"members":[{"id":539,"name":"NoError","nameLocation":"417:7:3","nodeType":"EnumValue","src":"417:7:3"},{"id":540,"name":"InvalidSignature","nameLocation":"434:16:3","nodeType":"EnumValue","src":"434:16:3"},{"id":541,"name":"InvalidSignatureLength","nameLocation":"460:22:3","nodeType":"EnumValue","src":"460:22:3"},{"id":542,"name":"InvalidSignatureS","nameLocation":"492:17:3","nodeType":"EnumValue","src":"492:17:3"},{"id":543,"name":"InvalidSignatureV","nameLocation":"519:17:3","nodeType":"EnumValue","src":"519:17:3"}],"name":"RecoverError","nameLocation":"394:12:3","nodeType":"EnumDefinition","src":"389:153:3"},{"body":{"id":597,"nodeType":"Block","src":"602:577:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"616:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":551,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"625:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":539,"src":"625:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"src":"616:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"712:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":557,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"721:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":540,"src":"721:29:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"src":"712:38:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"821:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":566,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"830:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":541,"src":"830:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"src":"821:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":574,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"943:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":575,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"952:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":542,"src":"952:30:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"src":"943:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":583,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"1063:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":584,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"1072:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":543,"src":"1072:30:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"src":"1063:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":592,"nodeType":"IfStatement","src":"1059:114:3","trueBody":{"id":591,"nodeType":"Block","src":"1104:69:3","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c7565","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""},"value":"ECDSA: invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""}],"id":587,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1118:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1118:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"1118:44:3"}]}},"id":593,"nodeType":"IfStatement","src":"939:234:3","trueBody":{"id":582,"nodeType":"Block","src":"984:69:3","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1005:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":578,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"998:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"998:44:3"}]}},"id":594,"nodeType":"IfStatement","src":"817:356:3","trueBody":{"id":573,"nodeType":"Block","src":"867:66:3","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":569,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"881:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"881:41:3"}]}},"id":595,"nodeType":"IfStatement","src":"708:465:3","trueBody":{"id":564,"nodeType":"Block","src":"752:59:3","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"773:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":560,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"766:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"766:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"766:34:3"}]}},"id":596,"nodeType":"IfStatement","src":"612:561:3","trueBody":{"id":555,"nodeType":"Block","src":"647:55:3","statements":[{"functionReturnParameters":549,"id":554,"nodeType":"Return","src":"661:7:3"}]}}]},"id":598,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"557:11:3","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"error","nameLocation":"582:5:3","nodeType":"VariableDeclaration","scope":598,"src":"569:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"569:12:3"},"referencedDeclaration":544,"src":"569:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"568:20:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"602:0:3"},"scope":922,"src":"548:631:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":643,"nodeType":"Block","src":"2347:626:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2361:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2361:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:2:3","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2361:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":641,"nodeType":"Block","src":"2886:81:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2916:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2908:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"2908:7:3","typeDescriptions":{}}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2908:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":637,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"2920:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":541,"src":"2920:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"id":639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2907:49:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":610,"id":640,"nodeType":"Return","src":"2900:56:3"}]},"id":642,"nodeType":"IfStatement","src":"2357:610:3","trueBody":{"id":632,"nodeType":"Block","src":"2385:495:3","statements":[{"assignments":[616],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"r","nameLocation":"2407:1:3","nodeType":"VariableDeclaration","scope":632,"src":"2399:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2399:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":617,"nodeType":"VariableDeclarationStatement","src":"2399:9:3"},{"assignments":[619],"declarations":[{"constant":false,"id":619,"mutability":"mutable","name":"s","nameLocation":"2430:1:3","nodeType":"VariableDeclaration","scope":632,"src":"2422:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2422:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":620,"nodeType":"VariableDeclarationStatement","src":"2422:9:3"},{"assignments":[622],"declarations":[{"constant":false,"id":622,"mutability":"mutable","name":"v","nameLocation":"2451:1:3","nodeType":"VariableDeclaration","scope":632,"src":"2445:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":621,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":623,"nodeType":"VariableDeclarationStatement","src":"2445:7:3"},{"AST":{"nodeType":"YulBlock","src":"2653:171:3","statements":[{"nodeType":"YulAssignment","src":"2671:32:3","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2686:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2697:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:3"},"nodeType":"YulFunctionCall","src":"2682:20:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2676:5:3"},"nodeType":"YulFunctionCall","src":"2676:27:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2671:1:3"}]},{"nodeType":"YulAssignment","src":"2720:32:3","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2735:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:3"},"nodeType":"YulFunctionCall","src":"2731:20:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2725:5:3"},"nodeType":"YulFunctionCall","src":"2725:27:3"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2720:1:3"}]},{"nodeType":"YulAssignment","src":"2769:41:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2779:1:3","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2792:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2803:4:3","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:3"},"nodeType":"YulFunctionCall","src":"2788:20:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2782:5:3"},"nodeType":"YulFunctionCall","src":"2782:27:3"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2774:4:3"},"nodeType":"YulFunctionCall","src":"2774:36:3"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2769:1:3"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":616,"isOffset":false,"isSlot":false,"src":"2671:1:3","valueSize":1},{"declaration":619,"isOffset":false,"isSlot":false,"src":"2720:1:3","valueSize":1},{"declaration":603,"isOffset":false,"isSlot":false,"src":"2686:9:3","valueSize":1},{"declaration":603,"isOffset":false,"isSlot":false,"src":"2735:9:3","valueSize":1},{"declaration":603,"isOffset":false,"isSlot":false,"src":"2792:9:3","valueSize":1},{"declaration":622,"isOffset":false,"isSlot":false,"src":"2769:1:3","valueSize":1}],"id":624,"nodeType":"InlineAssembly","src":"2644:180:3"},{"expression":{"arguments":[{"id":626,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2855:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":627,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"2861:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":628,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"2864:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":629,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"2867:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":625,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[644,718,829],"referencedDeclaration":829,"src":"2844:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":610,"id":631,"nodeType":"Return","src":"2837:32:3"}]}}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"1185:1053:3","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2252:10:3","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"hash","nameLocation":"2271:4:3","nodeType":"VariableDeclaration","scope":644,"src":"2263:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2263:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"signature","nameLocation":"2290:9:3","nodeType":"VariableDeclaration","scope":644,"src":"2277:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":602,"name":"bytes","nodeType":"ElementaryTypeName","src":"2277:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2262:38:3"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"2324:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"2333:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":608,"nodeType":"UserDefinedTypeName","pathNode":{"id":607,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"2333:12:3"},"referencedDeclaration":544,"src":"2333:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2323:23:3"},"scope":922,"src":"2243:730:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"3846:140:3","statements":[{"assignments":[655,658],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"recovered","nameLocation":"3865:9:3","nodeType":"VariableDeclaration","scope":670,"src":"3857:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"3857:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"error","nameLocation":"3889:5:3","nodeType":"VariableDeclaration","scope":670,"src":"3876:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":657,"nodeType":"UserDefinedTypeName","pathNode":{"id":656,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"3876:12:3"},"referencedDeclaration":544,"src":"3876:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":663,"initialValue":{"arguments":[{"id":660,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"3909:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":661,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"3915:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":659,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[644,718,829],"referencedDeclaration":644,"src":"3898:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3856:69:3"},{"expression":{"arguments":[{"id":665,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"3947:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}],"id":664,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3935:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$544_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3935:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"3935:18:3"},{"expression":{"id":668,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"3970:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":669,"nodeType":"Return","src":"3963:16:3"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"2979:775:3","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3768:7:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"hash","nameLocation":"3784:4:3","nodeType":"VariableDeclaration","scope":671,"src":"3776:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3776:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"signature","nameLocation":"3803:9:3","nodeType":"VariableDeclaration","scope":671,"src":"3790:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:38:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":671,"src":"3837:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3836:9:3"},"scope":922,"src":"3759:227:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"4373:203:3","statements":[{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"s","nameLocation":"4391:1:3","nodeType":"VariableDeclaration","scope":717,"src":"4383:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4383:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":694,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":688,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"4395:2:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:66:3","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4400:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4400:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4395:80:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4383:92:3"},{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"v","nameLocation":"4491:1:3","nodeType":"VariableDeclaration","scope":717,"src":"4485:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":695,"name":"uint8","nodeType":"ElementaryTypeName","src":"4485:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":709,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":701,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"4510:2:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"4502:7:3","typeDescriptions":{}}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4502:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4517:3:3","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4502:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4501:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:2:3","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4501:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4495:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":697,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:3","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4495:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4485:42:3"},{"expression":{"arguments":[{"id":711,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4555:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":712,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"4561:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":713,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4564:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":714,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4567:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":710,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[644,718,829],"referencedDeclaration":829,"src":"4544:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4544:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":685,"id":716,"nodeType":"Return","src":"4537:32:3"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"3992:243:3","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":718,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4249:10:3","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"hash","nameLocation":"4277:4:3","nodeType":"VariableDeclaration","scope":718,"src":"4269:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4269:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"r","nameLocation":"4299:1:3","nodeType":"VariableDeclaration","scope":718,"src":"4291:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"vs","nameLocation":"4318:2:3","nodeType":"VariableDeclaration","scope":718,"src":"4310:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4310:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4259:67:3"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"4350:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"4359:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":683,"nodeType":"UserDefinedTypeName","pathNode":{"id":682,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"4359:12:3"},"referencedDeclaration":544,"src":"4359:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4349:23:3"},"scope":922,"src":"4240:336:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"4857:136:3","statements":[{"assignments":[731,734],"declarations":[{"constant":false,"id":731,"mutability":"mutable","name":"recovered","nameLocation":"4876:9:3","nodeType":"VariableDeclaration","scope":747,"src":"4868:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"4868:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"error","nameLocation":"4900:5:3","nodeType":"VariableDeclaration","scope":747,"src":"4887:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"4887:12:3"},"referencedDeclaration":544,"src":"4887:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":740,"initialValue":{"arguments":[{"id":736,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4920:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":737,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4926:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":738,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4929:2:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":735,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[644,718,829],"referencedDeclaration":718,"src":"4909:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4909:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4867:65:3"},{"expression":{"arguments":[{"id":742,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"4954:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}],"id":741,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4942:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$544_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4942:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"4942:18:3"},{"expression":{"id":745,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4977:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":729,"id":746,"nodeType":"Return","src":"4970:16:3"}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"4582:154:3","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4750:7:3","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"hash","nameLocation":"4775:4:3","nodeType":"VariableDeclaration","scope":748,"src":"4767:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4767:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"r","nameLocation":"4797:1:3","nodeType":"VariableDeclaration","scope":748,"src":"4789:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"vs","nameLocation":"4816:2:3","nodeType":"VariableDeclaration","scope":748,"src":"4808:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4808:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4757:67:3"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"4848:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"4848:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4847:9:3"},"scope":922,"src":"4741:252:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":828,"nodeType":"Block","src":"5316:1454:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":767,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6212:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6204:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:3","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6204:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:66:3","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6204:79:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":780,"nodeType":"IfStatement","src":"6200:161:3","trueBody":{"id":779,"nodeType":"Block","src":"6285:76:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6315:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6307:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"6307:7:3","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6307:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":775,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6319:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":542,"src":"6319:30:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"id":777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6306:44:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":764,"id":778,"nodeType":"Return","src":"6299:51:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":781,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"6374:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3237","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6379:2:3","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6374:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"6385:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3238","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6390:2:3","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6385:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6374:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":797,"nodeType":"IfStatement","src":"6370:100:3","trueBody":{"id":796,"nodeType":"Block","src":"6394:76:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6424:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"6416:7:3","typeDescriptions":{}}},"id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6416:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":792,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6428:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":543,"src":"6428:30:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"id":794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6415:44:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":764,"id":795,"nodeType":"Return","src":"6408:51:3"}]}},{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"signer","nameLocation":"6572:6:3","nodeType":"VariableDeclaration","scope":828,"src":"6564:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"6564:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[{"id":801,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"6591:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":802,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"6597:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":803,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6600:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":804,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6603:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":800,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6581:9:3","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6581:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6564:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6619:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6629:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"6629:7:3","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6629:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6619:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":822,"nodeType":"IfStatement","src":"6615:101:3","trueBody":{"id":821,"nodeType":"Block","src":"6641:75:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6663:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"6663:7:3","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6663:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":817,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6675:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":540,"src":"6675:29:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"id":819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6662:43:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":764,"id":820,"nodeType":"Return","src":"6655:50:3"}]}},{"expression":{"components":[{"id":823,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"6734:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":824,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6742:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":539,"src":"6742:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"id":826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6733:30:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":764,"id":827,"nodeType":"Return","src":"6726:37:3"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"4999:163:3","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":829,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5176:10:3","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"hash","nameLocation":"5204:4:3","nodeType":"VariableDeclaration","scope":829,"src":"5196:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5196:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"v","nameLocation":"5224:1:3","nodeType":"VariableDeclaration","scope":829,"src":"5218:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":752,"name":"uint8","nodeType":"ElementaryTypeName","src":"5218:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"r","nameLocation":"5243:1:3","nodeType":"VariableDeclaration","scope":829,"src":"5235:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5235:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"s","nameLocation":"5262:1:3","nodeType":"VariableDeclaration","scope":829,"src":"5254:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5254:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5186:83:3"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"5293:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"5293:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"5302:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":762,"nodeType":"UserDefinedTypeName","pathNode":{"id":761,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"5302:12:3"},"referencedDeclaration":544,"src":"5302:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5292:23:3"},"scope":922,"src":"5167:1603:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"7035:138:3","statements":[{"assignments":[844,847],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"recovered","nameLocation":"7054:9:3","nodeType":"VariableDeclaration","scope":861,"src":"7046:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"7046:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"error","nameLocation":"7078:5:3","nodeType":"VariableDeclaration","scope":861,"src":"7065:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":846,"nodeType":"UserDefinedTypeName","pathNode":{"id":845,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"7065:12:3"},"referencedDeclaration":544,"src":"7065:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":854,"initialValue":{"arguments":[{"id":849,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"7098:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":850,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"7104:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":851,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7107:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":852,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"7110:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":848,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[644,718,829],"referencedDeclaration":829,"src":"7087:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7087:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"7045:67:3"},{"expression":{"arguments":[{"id":856,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"7134:5:3","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}],"id":855,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7122:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$544_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7122:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"7122:18:3"},{"expression":{"id":859,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7157:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":842,"id":860,"nodeType":"Return","src":"7150:16:3"}]},"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"6776:122:3","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6912:7:3","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"hash","nameLocation":"6937:4:3","nodeType":"VariableDeclaration","scope":862,"src":"6929:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6929:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"v","nameLocation":"6957:1:3","nodeType":"VariableDeclaration","scope":862,"src":"6951:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":833,"name":"uint8","nodeType":"ElementaryTypeName","src":"6951:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"r","nameLocation":"6976:1:3","nodeType":"VariableDeclaration","scope":862,"src":"6968:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6968:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"s","nameLocation":"6995:1:3","nodeType":"VariableDeclaration","scope":862,"src":"6987:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6987:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6919:83:3"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"7026:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"7026:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7025:9:3"},"scope":922,"src":"6903:270:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":878,"nodeType":"Block","src":"7541:187:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7679:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":874,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"7715:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":871,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7662:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7662:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7662:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":870,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7652:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":869,"id":877,"nodeType":"Return","src":"7645:76:3"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"7179:279:3","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7472:22:3","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"hash","nameLocation":"7503:4:3","nodeType":"VariableDeclaration","scope":879,"src":"7495:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7495:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7494:14:3"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"7532:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7532:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7531:9:3"},"scope":922,"src":"7463:265:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":900,"nodeType":"Block","src":"8093:116:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8137:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":893,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"8188:1:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8188:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":891,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"8171:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$534_$","typeString":"type(library Strings)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":396,"src":"8171:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8171:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":896,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"8199:1:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":888,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8120:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8120:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8120:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8110:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8110:92:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":886,"id":899,"nodeType":"Return","src":"8103:99:3"}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"7734:274:3","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"8022:22:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"s","nameLocation":"8058:1:3","nodeType":"VariableDeclaration","scope":901,"src":"8045:14:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":881,"name":"bytes","nodeType":"ElementaryTypeName","src":"8045:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8044:16:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"8084:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8083:9:3"},"scope":922,"src":"8013:196:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"8650:92:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8694:10:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":915,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"8706:15:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":916,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"8723:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":912,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8677:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8677:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8677:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":911,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8667:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8667:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":910,"id":919,"nodeType":"Return","src":"8660:75:3"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"8215:328:3","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8557:15:3","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"domainSeparator","nameLocation":"8581:15:3","nodeType":"VariableDeclaration","scope":921,"src":"8573:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8573:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"structHash","nameLocation":"8606:10:3","nodeType":"VariableDeclaration","scope":921,"src":"8598:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8598:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8572:45:3"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"8641:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8641:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8640:9:3"},"scope":922,"src":"8548:194:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":923,"src":"369:8375:3","usedErrors":[]}],"src":"112:8633:3"},"id":3},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","exportedSymbols":{"Address":[308],"ECDSA":[922],"IERC1271":[13],"SignatureChecker":[1005],"Strings":[534]},"id":1006,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":924,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":925,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1006,"sourceUnit":923,"src":"148:21:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../Address.sol","id":926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1006,"sourceUnit":309,"src":"170:24:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","id":927,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1006,"sourceUnit":14,"src":"195:39:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"236:294:4","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Gnosis Safe.\n _Available since v4.1._"},"fullyImplemented":true,"id":1005,"linearizedBaseContracts":[1005],"name":"SignatureChecker","nameLocation":"539:16:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1003,"nodeType":"Block","src":"1181:525:4","statements":[{"assignments":[941,944],"declarations":[{"constant":false,"id":941,"mutability":"mutable","name":"recovered","nameLocation":"1200:9:4","nodeType":"VariableDeclaration","scope":1003,"src":"1192:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"1192:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"error","nameLocation":"1230:5:4","nodeType":"VariableDeclaration","scope":1003,"src":"1211:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":943,"nodeType":"UserDefinedTypeName","pathNode":{"id":942,"name":"ECDSA.RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"1211:18:4"},"referencedDeclaration":544,"src":"1211:18:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":950,"initialValue":{"arguments":[{"id":947,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1256:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":948,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1262:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":945,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1239:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$922_$","typeString":"type(library ECDSA)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":644,"src":"1239:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"1191:81:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":951,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"1286:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":952,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1295:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$922_$","typeString":"type(library ECDSA)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":544,"src":"1295:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":539,"src":"1295:26:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"src":"1286:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"1325:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":957,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1338:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1325:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1286:58:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":963,"nodeType":"IfStatement","src":"1282:100:4","trueBody":{"id":962,"nodeType":"Block","src":"1346:36:4","statements":[{"expression":{"hexValue":"74727565","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1367:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":939,"id":961,"nodeType":"Return","src":"1360:11:4"}]}},{"assignments":[965,967],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"success","nameLocation":"1398:7:4","nodeType":"VariableDeclaration","scope":1003,"src":"1393:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"1393:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"result","nameLocation":"1420:6:4","nodeType":"VariableDeclaration","scope":1003,"src":"1407:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"1407:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":979,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":972,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1484:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"1484:25:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1484:34:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":975,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1520:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":976,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1526:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":970,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1461:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1461:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1461:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":968,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1430:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"1430:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1430:116:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1392:154:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"1564:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1587:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1587:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1587:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1564:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1633:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1642:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1642:7:4","typeDescriptions":{}}}],"id":991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1641:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":986,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1622:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1622:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1622:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":995,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1663:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"1663:25:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1663:34:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1655:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1655:7:4","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1622:76:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1564:134:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1563:136:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":939,"id":1002,"nodeType":"Return","src":"1556:143:4"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"562:472:4","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1048:19:4","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"signer","nameLocation":"1085:6:4","nodeType":"VariableDeclaration","scope":1004,"src":"1077:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"hash","nameLocation":"1109:4:4","nodeType":"VariableDeclaration","scope":1004,"src":"1101:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1101:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"signature","nameLocation":"1136:9:4","nodeType":"VariableDeclaration","scope":1004,"src":"1123:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":934,"name":"bytes","nodeType":"ElementaryTypeName","src":"1123:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1067:84:4"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"1175:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":937,"name":"bool","nodeType":"ElementaryTypeName","src":"1175:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1174:6:4"},"scope":1005,"src":"1039:667:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1006,"src":"531:1177:4","usedErrors":[]}],"src":"123:1586:4"},"id":4},"contracts/AffidavitSign.sol":{"ast":{"absolutePath":"contracts/AffidavitSign.sol","exportedSymbols":{"Address":[308],"AffidavitSign":[1222],"ECDSA":[922],"IERC1271":[13],"Invalid_Signature_By_Owner":[1015],"Nonce_Is_Used":[1011],"SignatureChecker":[1005],"SignerAddress_Recovery_Failed":[1013],"Strings":[534]},"id":1223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1007,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":923,"src":"60:62:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","file":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","id":1009,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1006,"src":"124:73:5","symbolAliases":[],"unitAlias":""},{"id":1011,"name":"Nonce_Is_Used","nameLocation":"207:13:5","nodeType":"ErrorDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"220:2:5"},"src":"201:22:5"},{"id":1013,"name":"SignerAddress_Recovery_Failed","nameLocation":"231:29:5","nodeType":"ErrorDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"260:2:5"},"src":"225:38:5"},{"id":1015,"name":"Invalid_Signature_By_Owner","nameLocation":"271:26:5","nodeType":"ErrorDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"297:2:5"},"src":"265:35:5"},{"abstract":false,"baseContracts":[],"canonicalName":"AffidavitSign","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1222,"linearizedBaseContracts":[1222],"name":"AffidavitSign","nameLocation":"352:13:5","nodeType":"ContractDefinition","nodes":[{"id":1017,"libraryName":{"id":1016,"name":"SignatureChecker","nodeType":"IdentifierPath","referencedDeclaration":1005,"src":"384:16:5"},"nodeType":"UsingForDirective","src":"378:29:5"},{"id":1019,"libraryName":{"id":1018,"name":"ECDSA","nodeType":"IdentifierPath","referencedDeclaration":922,"src":"419:5:5"},"nodeType":"UsingForDirective","src":"413:18:5"},{"anonymous":false,"id":1027,"name":"SignatureVerified","nameLocation":"501:17:5","nodeType":"EventDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"527:5:5","nodeType":"VariableDeclaration","scope":1027,"src":"519:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"indexed":false,"mutability":"mutable","name":"recepient","nameLocation":"542:9:5","nodeType":"VariableDeclaration","scope":1027,"src":"534:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1025,"indexed":false,"mutability":"mutable","name":"msghash","nameLocation":"561:7:5","nodeType":"VariableDeclaration","scope":1027,"src":"553:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"553:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"518:51:5"},"src":"495:75:5"},{"anonymous":false,"id":1037,"name":"RecepientSigned","nameLocation":"651:15:5","nodeType":"EventDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"675:4:5","nodeType":"VariableDeclaration","scope":1037,"src":"667:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1031,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"689:2:5","nodeType":"VariableDeclaration","scope":1037,"src":"681:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"indexed":false,"mutability":"mutable","name":"ipfshash","nameLocation":"701:8:5","nodeType":"VariableDeclaration","scope":1037,"src":"693:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"693:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1035,"indexed":false,"mutability":"mutable","name":"filehash","nameLocation":"719:8:5","nodeType":"VariableDeclaration","scope":1037,"src":"711:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"711:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"666:62:5"},"src":"645:84:5"},{"constant":false,"id":1039,"mutability":"immutable","name":"i_owner","nameLocation":"755:7:5","nodeType":"VariableDeclaration","scope":1222,"src":"737:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"i_recepient","nameLocation":"785:11:5","nodeType":"VariableDeclaration","scope":1222,"src":"769:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1045,"mutability":"mutable","name":"nonceBurned","nameLocation":"836:11:5","nodeType":"VariableDeclaration","scope":1222,"src":"803:44:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":1044,"keyType":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"803:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"822:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":1053,"nodeType":"Block","src":"873:39:5","statements":[{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1048,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"884:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"894:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"894:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"884:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"884:20:5"}]},"id":1054,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"871:2:5"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"873:0:5"},"scope":1222,"src":"860:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1084,"nodeType":"Block","src":"1093:260:5","statements":[{"expression":{"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1067,"name":"i_recepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1139:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1068,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1153:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1153:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1139:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1071,"nodeType":"ExpressionStatement","src":"1139:24:5"},{"expression":{"arguments":[{"id":1073,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"1218:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1074,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"1229:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1075,"name":"ipfs_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1236:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1076,"name":"msgId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1247:5:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1072,"name":"messageVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"1203:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$_t_bytes8_$returns$__$","typeString":"function (bytes memory,uint256,bytes32,bytes8)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1203:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"1203:50:5"},{"expression":{"arguments":[{"id":1080,"name":"ipfs_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1325:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1081,"name":"filehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"1336:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1079,"name":"docuSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1316:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1316:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"1316:29:5"}]},"functionSelector":"e7c8432c","id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"mainSignProcess","nameLocation":"929:15:5","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"signature","nameLocation":"968:9:5","nodeType":"VariableDeclaration","scope":1085,"src":"955:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"955:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"nonce","nameLocation":"996:5:5","nodeType":"VariableDeclaration","scope":1085,"src":"988:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"988:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"ipfs_hash","nameLocation":"1020:9:5","nodeType":"VariableDeclaration","scope":1085,"src":"1012:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1012:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"msgId","nameLocation":"1047:5:5","nodeType":"VariableDeclaration","scope":1085,"src":"1040:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1061,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1040:6:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"filehash","nameLocation":"1071:8:5","nodeType":"VariableDeclaration","scope":1085,"src":"1063:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1063:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"944:142:5"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"1093:0:5"},"scope":1222,"src":"920:433:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1153,"nodeType":"Block","src":"1511:734:5","statements":[{"assignments":[1100],"declarations":[{"constant":false,"id":1100,"mutability":"mutable","name":"errorRecoverSigner","nameLocation":"1562:18:5","nodeType":"VariableDeclaration","scope":1153,"src":"1543:37:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1099,"nodeType":"UserDefinedTypeName","pathNode":{"id":1098,"name":"ECDSA.RecoverError","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"1543:18:5"},"referencedDeclaration":544,"src":"1543:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1101,"nodeType":"VariableDeclarationStatement","src":"1543:37:5"},{"assignments":[1103],"declarations":[{"constant":false,"id":1103,"mutability":"mutable","name":"signer","nameLocation":"1599:6:5","nodeType":"VariableDeclaration","scope":1153,"src":"1591:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"1591:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1104,"nodeType":"VariableDeclarationStatement","src":"1591:14:5"},{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"message_hash","nameLocation":"1650:12:5","nodeType":"VariableDeclaration","scope":1153,"src":"1642:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1642:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1112,"initialValue":{"arguments":[{"id":1108,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"1681:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1109,"name":"ipfs_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"1688:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1110,"name":"msgId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"1699:5:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1107,"name":"recreateMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1665:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes8_$returns$_t_bytes32_$","typeString":"function (uint256,bytes32,bytes8) returns (bytes32)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1665:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1642:63:5"},{"expression":{"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1113,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1752:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"errorRecoverSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"1760:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1751:28:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1118,"name":"message_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"1799:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1119,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"1813:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1116,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1782:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$922_$","typeString":"type(library ECDSA)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":644,"src":"1782:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1782:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$544_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"src":"1751:72:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"ExpressionStatement","src":"1751:72:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1123,"name":"errorRecoverSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"1837:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1124,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1859:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$922_$","typeString":"type(library ECDSA)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":544,"src":"1859:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$544_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":539,"src":"1859:26:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$544","typeString":"enum ECDSA.RecoverError"}},"src":"1837:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"1834:91:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1128,"name":"SignerAddress_Recovery_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1894:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1894:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"RevertStatement","src":"1887:38:5"}},{"assignments":[1133],"declarations":[{"constant":false,"id":1133,"mutability":"mutable","name":"isValidSign","nameLocation":"1969:11:5","nodeType":"VariableDeclaration","scope":1153,"src":"1964:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1132,"name":"bool","nodeType":"ElementaryTypeName","src":"1964:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1140,"initialValue":{"arguments":[{"id":1136,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2020:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"message_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2028:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1138,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"2042:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1134,"name":"SignatureChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1983:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignatureChecker_$1005_$","typeString":"type(library SignatureChecker)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isValidSignatureNow","nodeType":"MemberAccess","referencedDeclaration":1004,"src":"1983:36:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1983:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1964:88:5"},{"condition":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2066:12:5","subExpression":{"id":1141,"name":"isValidSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"2067:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1146,"nodeType":"IfStatement","src":"2063:52:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1143,"name":"Invalid_Signature_By_Owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2087:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2087:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"RevertStatement","src":"2080:35:5"}},{"eventCall":{"arguments":[{"id":1148,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2192:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"i_recepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2201:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1150,"name":"message_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2214:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1147,"name":"SignatureVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2174:17:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,address,bytes32)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1152,"nodeType":"EmitStatement","src":"2169:58:5"}]},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"messageVerify","nameLocation":"1370:13:5","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"signature","nameLocation":"1407:9:5","nodeType":"VariableDeclaration","scope":1154,"src":"1394:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"1394:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"nonce","nameLocation":"1435:5:5","nodeType":"VariableDeclaration","scope":1154,"src":"1427:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"ipfs_hash","nameLocation":"1459:9:5","nodeType":"VariableDeclaration","scope":1154,"src":"1451:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1451:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"msgId","nameLocation":"1486:5:5","nodeType":"VariableDeclaration","scope":1154,"src":"1479:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1092,"name":"bytes8","nodeType":"ElementaryTypeName","src":"1479:6:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"1383:119:5"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[],"src":"1511:0:5"},"scope":1222,"src":"1361:884:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"2316:90:5","statements":[{"eventCall":{"arguments":[{"id":1162,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2348:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"i_recepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2357:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"ipfs_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2370:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1165,"name":"filehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2381:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1161,"name":"RecepientSigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"2332:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,bytes32,bytes32)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2332:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"EmitStatement","src":"2327:63:5"}]},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"docuSign","nameLocation":"2262:8:5","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"ipfs_hash","nameLocation":"2279:9:5","nodeType":"VariableDeclaration","scope":1169,"src":"2271:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2271:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"filehash","nameLocation":"2298:8:5","nodeType":"VariableDeclaration","scope":1169,"src":"2290:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2290:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2270:37:5"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[],"src":"2316:0:5"},"scope":1222,"src":"2253:153:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"2558:340:5","statements":[{"condition":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2677:19:5","subExpression":{"baseExpression":{"id":1180,"name":"nonceBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2678:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1182,"indexExpression":{"id":1181,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2690:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2678:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"2674:46:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1184,"name":"Nonce_Is_Used","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2705:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2705:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"RevertStatement","src":"2698:22:5"}},{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1188,"name":"nonceBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2731:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1190,"indexExpression":{"id":1189,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2743:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2731:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2752:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2731:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1193,"nodeType":"ExpressionStatement","src":"2731:25:5"},{"expression":{"arguments":[{"arguments":[{"id":1197,"name":"msgId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2829:5:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"id":1198,"name":"ipfs_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"2836:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1199,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2847:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":1202,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2862:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2862:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2854:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"2854:7:5","typeDescriptions":{}}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2854:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1207,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2883:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_AffidavitSign_$1222","typeString":"contract AffidavitSign"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AffidavitSign_$1222","typeString":"contract AffidavitSign"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2875:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"2875:7:5","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2875:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1195,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2812:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2812:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2812:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1194,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2802:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2802:88:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1179,"id":1211,"nodeType":"Return","src":"2795:95:5"}]},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"recreateMessage","nameLocation":"2426:15:5","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"nonce","nameLocation":"2460:5:5","nodeType":"VariableDeclaration","scope":1213,"src":"2452:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2452:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"ipfs_hash","nameLocation":"2484:9:5","nodeType":"VariableDeclaration","scope":1213,"src":"2476:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2476:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"msgId","nameLocation":"2513:5:5","nodeType":"VariableDeclaration","scope":1213,"src":"2506:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1174,"name":"bytes8","nodeType":"ElementaryTypeName","src":"2506:6:5","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"2441:91:5"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"2550:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2550:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2549:9:5"},"scope":1222,"src":"2417:481:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1220,"nodeType":"Block","src":"2990:33:5","statements":[{"expression":{"id":1218,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"3008:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1217,"id":1219,"nodeType":"Return","src":"3001:14:5"}]},"functionSelector":"1567802a","id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"getOwnerOfContract","nameLocation":"2941:18:5","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"2959:2:5"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"2982:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"2982:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2981:9:5"},"scope":1222,"src":"2932:91:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1223,"src":"343:2685:5","usedErrors":[1011,1013,1015]}],"src":"33:2995:5"},"id":5}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919410102baee4ae49f3fecd64009dc614f68802b33ddab312e079faa4a9a47b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP5 LT LT 0x2B 0xAE 0xE4 0xAE 0x49 RETURN INVALID 0xCD PUSH5 0x9DC614F6 DUP9 MUL 0xB3 RETURNDATASIZE 0xDA 0xB3 SLT 0xE0 PUSH26 0xFAA4A9A47B64736F6C6343000809003300000000000000000000 ","sourceMap":"194:8111:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919410102baee4ae49f3fecd64009dc614f68802b33ddab312e079faa4a9a47b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP5 LT LT 0x2B 0xAE 0xE4 0xAE 0x49 RETURN INVALID 0xCD PUSH5 0x9DC614F6 DUP9 MUL 0xB3 RETURNDATASIZE 0xDA 0xB3 SLT 0xE0 PUSH26 0xFAA4A9A47B64736F6C6343000809003300000000000000000000 ","sourceMap":"194:8111:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b92035b42dcc3aec0b3e4eabd70fbc2c49f312baebbbc38f9fc50feda5de9d5b64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 KECCAK256 CALLDATALOAD 0xB4 0x2D 0xCC GASPRICE 0xEC SIGNEXTEND RETURNDATACOPY 0x4E 0xAB 0xD7 0xF 0xBC 0x2C 0x49 RETURN SLT 0xBA 0xEB 0xBB 0xC3 DUP16 SWAP16 0xC5 0xF 0xED 0xA5 0xDE SWAP14 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"161:2235:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b92035b42dcc3aec0b3e4eabd70fbc2c49f312baebbbc38f9fc50feda5de9d5b64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 KECCAK256 CALLDATALOAD 0xB4 0x2D 0xCC GASPRICE 0xEC SIGNEXTEND RETURNDATACOPY 0x4E 0xAB 0xD7 0xF 0xBC 0x2C 0x49 RETURN SLT 0xBA 0xEB 0xBB 0xC3 DUP16 SWAP16 0xC5 0xF 0xED 0xA5 0xDE SWAP14 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"161:2235:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6e3fc321917d19d90021ab7f5ce297a251d358d765f34dfc064c1f99eb09a4764736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xE3 0xFC ORIGIN NOT OR 0xD1 SWAP14 SWAP1 MUL BYTE 0xB7 CREATE2 0xCE 0x29 PUSH27 0x251D358D765F34DFC064C1F99EB09A4764736F6C63430008090033 ","sourceMap":"369:8375:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6e3fc321917d19d90021ab7f5ce297a251d358d765f34dfc064c1f99eb09a4764736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xE3 0xFC ORIGIN NOT OR 0xD1 SWAP14 SWAP1 MUL BYTE 0xB7 CREATE2 0xCE 0x29 PUSH27 0x251D358D765F34DFC064C1F99EB09A4764736F6C63430008090033 ","sourceMap":"369:8375:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220981ffc4ff063a0006cd553482bb4a92dd82d68b0431720d2033b9bec35f4a1e864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x1F 0xFC 0x4F CREATE PUSH4 0xA0006CD5 MSTORE8 BASEFEE 0x2B 0xB4 0xA9 0x2D 0xD8 0x2D PUSH9 0xB0431720D2033B9BEC CALLDATALOAD DELEGATECALL LOG1 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"531:1177:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220981ffc4ff063a0006cd553482bb4a92dd82d68b0431720d2033b9bec35f4a1e864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x1F 0xFC 0x4F CREATE PUSH4 0xA0006CD5 MSTORE8 BASEFEE 0x2B 0xB4 0xA9 0x2D 0xD8 0x2D PUSH9 0xB0431720D2033B9BEC CALLDATALOAD DELEGATECALL LOG1 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"531:1177:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]}},\"version\":1}"}},"contracts/AffidavitSign.sol":{"AffidavitSign":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Invalid_Signature_By_Owner","type":"error"},{"inputs":[],"name":"Nonce_Is_Used","type":"error"},{"inputs":[],"name":"SignerAddress_Recovery_Failed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"ipfshash","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"filehash","type":"bytes32"}],"name":"RecepientSigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recepient","type":"address"},{"indexed":false,"internalType":"bytes32","name":"msghash","type":"bytes32"}],"name":"SignatureVerified","type":"event"},{"inputs":[],"name":"getOwnerOfContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes32","name":"ipfs_hash","type":"bytes32"},{"internalType":"bytes8","name":"msgId","type":"bytes8"},{"internalType":"bytes32","name":"filehash","type":"bytes32"}],"name":"mainSignProcess","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1054":{"entryPoint":null,"id":1054,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050608051610d6261006d600039600081816079015281816101e5015261026a0152610d626000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631567802a1461003b578063e7c8432c14610059575b600080fd5b610043610075565b60405161005091906106ea565b60405180910390f35b610073600480360381019061006e9190610923565b61009d565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100e9858585856100fa565b6100f38382610247565b5050505050565b600080600061010a8686866102c8565b90506101168188610384565b809450819350505060006004811115610132576101316109ba565b5b836004811115610145576101446109ba565b5b1461017c576040517f87e8191900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061018983838a6103d6565b9050806101c2576040517f9730126700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fcd182b7b23d2cf25e3288287cb62a2c6f0ba73d649eea19849d24c1e7d896a5f7f000000000000000000000000000000000000000000000000000000000000000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604051610235939291906109f8565b60405180910390a15050505050505050565b7f84875ec6f3430e00bd9b7695549d51b10bbfe765476eeacbac0eaa1653e936917f000000000000000000000000000000000000000000000000000000000000000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846040516102bc9493929190610a2f565b60405180910390a15050565b60006001600085815260200190815260200160002060009054906101000a900460ff16610321576040517f2991015c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600086815260200190815260200160002060006101000a81548160ff0219169083151502179055508183853330604051602001610365959493929190610b1f565b6040516020818303038152906040528051906020012090509392505050565b6000806041835114156103c65760008060006020860151925060408601519150606086015160001a90506103ba8782858561059c565b945094505050506103cf565b60006002915091505b9250929050565b60008060006103e58585610384565b91509150600060048111156103fd576103fc6109ba565b5b8160048111156104105761040f6109ba565b5b14801561044857508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b1561045857600192505050610595565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b888860405160240161048d929190610c06565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104f79190610c72565b600060405180830381855afa9150503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b509150915081801561054a575060208151145b801561058e5750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168180602001905181019061058c9190610c9e565b145b9450505050505b9392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156105d75760006003915091506106a0565b601b8560ff16141580156105ef5750601c8560ff1614155b156106015760006004915091506106a0565b6000600187878787604051600081526020016040526040516106269493929190610ce7565b6020604051602081039080840390855afa158015610648573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610697576000600192509250506106a0565b80600092509250505b94509492505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d4826106a9565b9050919050565b6106e4816106c9565b82525050565b60006020820190506106ff60008301846106db565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61076c82610723565b810181811067ffffffffffffffff8211171561078b5761078a610734565b5b80604052505050565b600061079e610705565b90506107aa8282610763565b919050565b600067ffffffffffffffff8211156107ca576107c9610734565b5b6107d382610723565b9050602081019050919050565b82818337600083830152505050565b60006108026107fd846107af565b610794565b90508281526020810184848401111561081e5761081d61071e565b5b6108298482856107e0565b509392505050565b600082601f83011261084657610845610719565b5b81356108568482602086016107ef565b91505092915050565b6000819050919050565b6108728161085f565b811461087d57600080fd5b50565b60008135905061088f81610869565b92915050565b6000819050919050565b6108a881610895565b81146108b357600080fd5b50565b6000813590506108c58161089f565b92915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b610900816108cb565b811461090b57600080fd5b50565b60008135905061091d816108f7565b92915050565b600080600080600060a0868803121561093f5761093e61070f565b5b600086013567ffffffffffffffff81111561095d5761095c610714565b5b61096988828901610831565b955050602061097a88828901610880565b945050604061098b888289016108b6565b935050606061099c8882890161090e565b92505060806109ad888289016108b6565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6109f281610895565b82525050565b6000606082019050610a0d60008301866106db565b610a1a60208301856106db565b610a2760408301846109e9565b949350505050565b6000608082019050610a4460008301876106db565b610a5160208301866106db565b610a5e60408301856109e9565b610a6b60608301846109e9565b95945050505050565b6000819050919050565b610a8f610a8a826108cb565b610a74565b82525050565b6000819050919050565b610ab0610aab82610895565b610a95565b82525050565b6000819050919050565b610ad1610acc8261085f565b610ab6565b82525050565b60008160601b9050919050565b6000610aef82610ad7565b9050919050565b6000610b0182610ae4565b9050919050565b610b19610b14826106c9565b610af6565b82525050565b6000610b2b8288610a7e565b600882019150610b3b8287610a9f565b602082019150610b4b8286610ac0565b602082019150610b5b8285610b08565b601482019150610b6b8284610b08565b6014820191508190509695505050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bb8578082015181840152602081019050610b9d565b83811115610bc7576000848401525b50505050565b6000610bd882610b7e565b610be28185610b89565b9350610bf2818560208601610b9a565b610bfb81610723565b840191505092915050565b6000604082019050610c1b60008301856109e9565b8181036020830152610c2d8184610bcd565b90509392505050565b600081905092915050565b6000610c4c82610b7e565b610c568185610c36565b9350610c66818560208601610b9a565b80840191505092915050565b6000610c7e8284610c41565b915081905092915050565b600081519050610c988161089f565b92915050565b600060208284031215610cb457610cb361070f565b5b6000610cc284828501610c89565b91505092915050565b600060ff82169050919050565b610ce181610ccb565b82525050565b6000608082019050610cfc60008301876109e9565b610d096020830186610cd8565b610d1660408301856109e9565b610d2360608301846109e9565b9594505050505056fea264697066735822122066d119621a9b72c17407463b8743960df5379154a7962c3008d4a6780de6265164736f6c63430008090033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0xD62 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x79 ADD MSTORE DUP2 DUP2 PUSH2 0x1E5 ADD MSTORE PUSH2 0x26A ADD MSTORE PUSH2 0xD62 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1567802A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE7C8432C EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE9 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xF3 DUP4 DUP3 PUSH2 0x247 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x10A DUP7 DUP7 DUP7 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x116 DUP2 DUP9 PUSH2 0x384 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP4 POP POP POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0x9BA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x145 JUMPI PUSH2 0x144 PUSH2 0x9BA JUMP JUMPDEST JUMPDEST EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH32 0x87E8191900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP4 DUP4 DUP11 PUSH2 0x3D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9730126700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xCD182B7B23D2CF25E3288287CB62A2C6F0BA73D649EEA19849D24C1E7D896A5F PUSH32 0x0 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x235 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x84875EC6F3430E00BD9B7695549D51B10BBFE765476EEACBAC0EAA1653E93691 PUSH32 0x0 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2991015C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP4 DUP6 CALLER ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x365 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD EQ ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x3BA DUP8 DUP3 DUP6 DUP6 PUSH2 0x59C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3E5 DUP6 DUP6 PUSH2 0x384 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3FC PUSH2 0x9BA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0x9BA JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x448 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x458 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x48D SWAP3 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x537 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x54A JUMPI POP PUSH1 0x20 DUP2 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x58E JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST EQ JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5EF JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x626 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x6A0 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D4 DUP3 PUSH2 0x6A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E4 DUP2 PUSH2 0x6C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x76C DUP3 PUSH2 0x723 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x734 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E PUSH2 0x705 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP3 DUP3 PUSH2 0x763 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x734 JUMP JUMPDEST JUMPDEST PUSH2 0x7D3 DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 PUSH2 0x7FD DUP5 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x71E JUMP JUMPDEST JUMPDEST PUSH2 0x829 DUP5 DUP3 DUP6 PUSH2 0x7E0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x846 JUMPI PUSH2 0x845 PUSH2 0x719 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x856 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x872 DUP2 PUSH2 0x85F JUMP JUMPDEST DUP2 EQ PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88F DUP2 PUSH2 0x869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0x895 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C5 DUP2 PUSH2 0x89F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x8CB JUMP JUMPDEST DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x91D DUP2 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93E PUSH2 0x70F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x714 JUMP JUMPDEST JUMPDEST PUSH2 0x969 DUP9 DUP3 DUP10 ADD PUSH2 0x831 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x97A DUP9 DUP3 DUP10 ADD PUSH2 0x880 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x98B DUP9 DUP3 DUP10 ADD PUSH2 0x8B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x99C DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x9AD DUP9 DUP3 DUP10 ADD PUSH2 0x8B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9F2 DUP2 PUSH2 0x895 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA0D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA1A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA27 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xA44 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA51 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA5E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xA6B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8F PUSH2 0xA8A DUP3 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0xAAB DUP3 PUSH2 0x895 JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD1 PUSH2 0xACC DUP3 PUSH2 0x85F JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEF DUP3 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB01 DUP3 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB19 PUSH2 0xB14 DUP3 PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2B DUP3 DUP9 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP PUSH2 0xB3B DUP3 DUP8 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xB4B DUP3 DUP7 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xB5B DUP3 DUP6 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB6B DUP3 DUP5 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBB8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB9D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD8 DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0xBE2 DUP2 DUP6 PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP PUSH2 0xBF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST PUSH2 0xBFB DUP2 PUSH2 0x723 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC1B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9E9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 DUP5 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4C DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0xC56 DUP2 DUP6 PUSH2 0xC36 JUMP JUMPDEST SWAP4 POP PUSH2 0xC66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7E DUP3 DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC98 DUP2 PUSH2 0x89F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x70F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP5 DUP3 DUP6 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xCFC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xD09 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xD16 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xD23 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD119621A9B72C1 PUSH21 0x7463B8743960DF5379154A7962C3008D4A6780DE6 0x26 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"343:2685:5:-:0;;;860:52;;;;;;;;;;894:10;884:20;;;;;;;;;;343:2685;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@docuSign_1169":{"entryPoint":583,"id":1169,"parameterSlots":2,"returnSlots":0},"@getOwnerOfContract_1221":{"entryPoint":117,"id":1221,"parameterSlots":0,"returnSlots":1},"@isValidSignatureNow_1004":{"entryPoint":982,"id":1004,"parameterSlots":3,"returnSlots":1},"@mainSignProcess_1085":{"entryPoint":157,"id":1085,"parameterSlots":5,"returnSlots":0},"@messageVerify_1154":{"entryPoint":250,"id":1154,"parameterSlots":4,"returnSlots":0},"@recreateMessage_1213":{"entryPoint":712,"id":1213,"parameterSlots":3,"returnSlots":1},"@tryRecover_644":{"entryPoint":900,"id":644,"parameterSlots":2,"returnSlots":2},"@tryRecover_829":{"entryPoint":1436,"id":829,"parameterSlots":4,"returnSlots":2},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2031,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":3209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes8":{"entryPoint":2318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":3230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptrt_uint256t_bytes32t_bytes8t_bytes32":{"entryPoint":2339,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1755,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":2824,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2537,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":2719,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes8_to_t_bytes8_nonPadded_inplace_fromStack":{"entryPoint":2686,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":2752,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3288,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes8_t_bytes32_t_uint256_t_address_t_address__to_t_bytes8_t_bytes32_t_uint256_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":2847,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes32__to_t_address_t_address_t_bytes32__fromStack_reversed":{"entryPoint":2552,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":2607,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3078,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":3303,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":1940,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1797,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1967,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2942,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2953,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3126,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1737,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2197,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes8":{"entryPoint":2251,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1705,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2143,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3275,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2016,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":2970,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1891,"id":null,"parameterSlots":2,"returnSlots":0},"leftAlign_t_address":{"entryPoint":2806,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":2709,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes8":{"entryPoint":2676,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":2788,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":2742,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":2490,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1844,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1817,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1822,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1812,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1807,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1827,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":2775,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_bytes32":{"entryPoint":2207,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes8":{"entryPoint":2295,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2153,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12158:6","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:6","statements":[{"nodeType":"YulAssignment","src":"62:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:6"},"nodeType":"YulFunctionCall","src":"73:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:6","type":""}],"src":"7:126:6"},{"body":{"nodeType":"YulBlock","src":"184:51:6","statements":[{"nodeType":"YulAssignment","src":"194:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:6"},"nodeType":"YulFunctionCall","src":"205:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:6","type":""}],"src":"139:96:6"},{"body":{"nodeType":"YulBlock","src":"306:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:6"},"nodeType":"YulFunctionCall","src":"328:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:6"},"nodeType":"YulFunctionCall","src":"316:37:6"},"nodeType":"YulExpressionStatement","src":"316:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:6","type":""}],"src":"241:118:6"},{"body":{"nodeType":"YulBlock","src":"463:124:6","statements":[{"nodeType":"YulAssignment","src":"473:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:6"},"nodeType":"YulFunctionCall","src":"481:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:6"},"nodeType":"YulFunctionCall","src":"562:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:6"},"nodeType":"YulFunctionCall","src":"509:71:6"},"nodeType":"YulExpressionStatement","src":"509:71:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:6","type":""}],"src":"365:222:6"},{"body":{"nodeType":"YulBlock","src":"633:35:6","statements":[{"nodeType":"YulAssignment","src":"643:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:6"},"nodeType":"YulFunctionCall","src":"653:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:6","type":""}],"src":"593:75:6"},{"body":{"nodeType":"YulBlock","src":"763:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:6"},"nodeType":"YulFunctionCall","src":"773:12:6"},"nodeType":"YulExpressionStatement","src":"773:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:6"},{"body":{"nodeType":"YulBlock","src":"886:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:6"},"nodeType":"YulFunctionCall","src":"896:12:6"},"nodeType":"YulExpressionStatement","src":"896:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:6"},{"body":{"nodeType":"YulBlock","src":"1009:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1029:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1019:6:6"},"nodeType":"YulFunctionCall","src":"1019:12:6"},"nodeType":"YulExpressionStatement","src":"1019:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"920:117:6"},{"body":{"nodeType":"YulBlock","src":"1132:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1149:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1152:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1142:6:6"},"nodeType":"YulFunctionCall","src":"1142:12:6"},"nodeType":"YulExpressionStatement","src":"1142:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1043:117:6"},{"body":{"nodeType":"YulBlock","src":"1214:54:6","statements":[{"nodeType":"YulAssignment","src":"1224:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1242:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"1249:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:6"},"nodeType":"YulFunctionCall","src":"1238:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1258:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1254:3:6"},"nodeType":"YulFunctionCall","src":"1254:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1234:3:6"},"nodeType":"YulFunctionCall","src":"1234:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1224:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1197:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1207:6:6","type":""}],"src":"1166:102:6"},{"body":{"nodeType":"YulBlock","src":"1302:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1319:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1322:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1312:6:6"},"nodeType":"YulFunctionCall","src":"1312:88:6"},"nodeType":"YulExpressionStatement","src":"1312:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1416:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1419:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1409:6:6"},"nodeType":"YulFunctionCall","src":"1409:15:6"},"nodeType":"YulExpressionStatement","src":"1409:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1440:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1443:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1433:6:6"},"nodeType":"YulFunctionCall","src":"1433:15:6"},"nodeType":"YulExpressionStatement","src":"1433:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1274:180:6"},{"body":{"nodeType":"YulBlock","src":"1503:238:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:58:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1535:6:6"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1565:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1543:21:6"},"nodeType":"YulFunctionCall","src":"1543:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1531:3:6"},"nodeType":"YulFunctionCall","src":"1531:40:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1517:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1684:16:6"},"nodeType":"YulFunctionCall","src":"1684:18:6"},"nodeType":"YulExpressionStatement","src":"1684:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1625:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"1637:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1622:2:6"},"nodeType":"YulFunctionCall","src":"1622:34:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1661:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1673:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1658:2:6"},"nodeType":"YulFunctionCall","src":"1658:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1619:2:6"},"nodeType":"YulFunctionCall","src":"1619:62:6"},"nodeType":"YulIf","src":"1616:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1724:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1713:6:6"},"nodeType":"YulFunctionCall","src":"1713:22:6"},"nodeType":"YulExpressionStatement","src":"1713:22:6"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1489:6:6","type":""},{"name":"size","nodeType":"YulTypedName","src":"1497:4:6","type":""}],"src":"1460:281:6"},{"body":{"nodeType":"YulBlock","src":"1788:88:6","statements":[{"nodeType":"YulAssignment","src":"1798:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1808:18:6"},"nodeType":"YulFunctionCall","src":"1808:20:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1798:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1857:6:6"},{"name":"size","nodeType":"YulIdentifier","src":"1865:4:6"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1837:19:6"},"nodeType":"YulFunctionCall","src":"1837:33:6"},"nodeType":"YulExpressionStatement","src":"1837:33:6"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1772:4:6","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1781:6:6","type":""}],"src":"1747:129:6"},{"body":{"nodeType":"YulBlock","src":"1948:241:6","statements":[{"body":{"nodeType":"YulBlock","src":"2053:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2055:16:6"},"nodeType":"YulFunctionCall","src":"2055:18:6"},"nodeType":"YulExpressionStatement","src":"2055:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2025:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2033:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2022:2:6"},"nodeType":"YulFunctionCall","src":"2022:30:6"},"nodeType":"YulIf","src":"2019:56:6"},{"nodeType":"YulAssignment","src":"2085:37:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2115:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2093:21:6"},"nodeType":"YulFunctionCall","src":"2093:29:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:6"}]},{"nodeType":"YulAssignment","src":"2159:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2171:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"2177:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2167:3:6"},"nodeType":"YulFunctionCall","src":"2167:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2159:4:6"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1932:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1943:4:6","type":""}],"src":"1882:307:6"},{"body":{"nodeType":"YulBlock","src":"2246:103:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2269:3:6"},{"name":"src","nodeType":"YulIdentifier","src":"2274:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2279:6:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2256:12:6"},"nodeType":"YulFunctionCall","src":"2256:30:6"},"nodeType":"YulExpressionStatement","src":"2256:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2327:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2332:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2323:3:6"},"nodeType":"YulFunctionCall","src":"2323:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"2341:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2316:6:6"},"nodeType":"YulFunctionCall","src":"2316:27:6"},"nodeType":"YulExpressionStatement","src":"2316:27:6"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2228:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2233:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"2238:6:6","type":""}],"src":"2195:154:6"},{"body":{"nodeType":"YulBlock","src":"2438:327:6","statements":[{"nodeType":"YulAssignment","src":"2448:74:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2514:6:6"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2473:40:6"},"nodeType":"YulFunctionCall","src":"2473:48:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2457:15:6"},"nodeType":"YulFunctionCall","src":"2457:65:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2448:5:6"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2538:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"2545:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2531:6:6"},"nodeType":"YulFunctionCall","src":"2531:21:6"},"nodeType":"YulExpressionStatement","src":"2531:21:6"},{"nodeType":"YulVariableDeclaration","src":"2561:27:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2576:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2583:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:6"},"nodeType":"YulFunctionCall","src":"2572:16:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2565:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2626:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2628:77:6"},"nodeType":"YulFunctionCall","src":"2628:79:6"},"nodeType":"YulExpressionStatement","src":"2628:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2607:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2612:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:6"},"nodeType":"YulFunctionCall","src":"2603:16:6"},{"name":"end","nodeType":"YulIdentifier","src":"2621:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2600:2:6"},"nodeType":"YulFunctionCall","src":"2600:25:6"},"nodeType":"YulIf","src":"2597:112:6"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2742:3:6"},{"name":"dst","nodeType":"YulIdentifier","src":"2747:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2752:6:6"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"2718:23:6"},"nodeType":"YulFunctionCall","src":"2718:41:6"},"nodeType":"YulExpressionStatement","src":"2718:41:6"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2411:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"2416:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2424:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2432:5:6","type":""}],"src":"2355:410:6"},{"body":{"nodeType":"YulBlock","src":"2845:277:6","statements":[{"body":{"nodeType":"YulBlock","src":"2894:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2896:77:6"},"nodeType":"YulFunctionCall","src":"2896:79:6"},"nodeType":"YulExpressionStatement","src":"2896:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2873:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2881:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2869:3:6"},"nodeType":"YulFunctionCall","src":"2869:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"2888:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2865:3:6"},"nodeType":"YulFunctionCall","src":"2865:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2858:6:6"},"nodeType":"YulFunctionCall","src":"2858:35:6"},"nodeType":"YulIf","src":"2855:122:6"},{"nodeType":"YulVariableDeclaration","src":"2986:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3013:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3000:12:6"},"nodeType":"YulFunctionCall","src":"3000:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2990:6:6","type":""}]},{"nodeType":"YulAssignment","src":"3029:87:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3089:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3097:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3085:3:6"},"nodeType":"YulFunctionCall","src":"3085:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"3104:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"3112:3:6"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3038:46:6"},"nodeType":"YulFunctionCall","src":"3038:78:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3029:5:6"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2823:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2831:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2839:5:6","type":""}],"src":"2784:338:6"},{"body":{"nodeType":"YulBlock","src":"3173:32:6","statements":[{"nodeType":"YulAssignment","src":"3183:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"3194:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3183:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3155:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3165:7:6","type":""}],"src":"3128:77:6"},{"body":{"nodeType":"YulBlock","src":"3254:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3311:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3320:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3323:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3313:6:6"},"nodeType":"YulFunctionCall","src":"3313:12:6"},"nodeType":"YulExpressionStatement","src":"3313:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3277:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3302:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3284:17:6"},"nodeType":"YulFunctionCall","src":"3284:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3274:2:6"},"nodeType":"YulFunctionCall","src":"3274:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3267:6:6"},"nodeType":"YulFunctionCall","src":"3267:43:6"},"nodeType":"YulIf","src":"3264:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3247:5:6","type":""}],"src":"3211:122:6"},{"body":{"nodeType":"YulBlock","src":"3391:87:6","statements":[{"nodeType":"YulAssignment","src":"3401:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3410:12:6"},"nodeType":"YulFunctionCall","src":"3410:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3401:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3466:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3439:26:6"},"nodeType":"YulFunctionCall","src":"3439:33:6"},"nodeType":"YulExpressionStatement","src":"3439:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3369:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"3377:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3385:5:6","type":""}],"src":"3339:139:6"},{"body":{"nodeType":"YulBlock","src":"3529:32:6","statements":[{"nodeType":"YulAssignment","src":"3539:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"3550:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3539:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3511:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3521:7:6","type":""}],"src":"3484:77:6"},{"body":{"nodeType":"YulBlock","src":"3610:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3667:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3676:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3679:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3669:6:6"},"nodeType":"YulFunctionCall","src":"3669:12:6"},"nodeType":"YulExpressionStatement","src":"3669:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3633:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3658:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3640:17:6"},"nodeType":"YulFunctionCall","src":"3640:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3630:2:6"},"nodeType":"YulFunctionCall","src":"3630:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3623:6:6"},"nodeType":"YulFunctionCall","src":"3623:43:6"},"nodeType":"YulIf","src":"3620:63:6"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3603:5:6","type":""}],"src":"3567:122:6"},{"body":{"nodeType":"YulBlock","src":"3747:87:6","statements":[{"nodeType":"YulAssignment","src":"3757:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3779:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3766:12:6"},"nodeType":"YulFunctionCall","src":"3766:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3757:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3822:5:6"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3795:26:6"},"nodeType":"YulFunctionCall","src":"3795:33:6"},"nodeType":"YulExpressionStatement","src":"3795:33:6"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3725:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"3733:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3741:5:6","type":""}],"src":"3695:139:6"},{"body":{"nodeType":"YulBlock","src":"3884:105:6","statements":[{"nodeType":"YulAssignment","src":"3894:89:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3909:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"3916:66:6","type":"","value":"0xffffffffffffffff000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3905:3:6"},"nodeType":"YulFunctionCall","src":"3905:78:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3894:7:6"}]}]},"name":"cleanup_t_bytes8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3866:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3876:7:6","type":""}],"src":"3840:149:6"},{"body":{"nodeType":"YulBlock","src":"4037:78:6","statements":[{"body":{"nodeType":"YulBlock","src":"4093:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4102:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4105:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4095:6:6"},"nodeType":"YulFunctionCall","src":"4095:12:6"},"nodeType":"YulExpressionStatement","src":"4095:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4060:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4084:5:6"}],"functionName":{"name":"cleanup_t_bytes8","nodeType":"YulIdentifier","src":"4067:16:6"},"nodeType":"YulFunctionCall","src":"4067:23:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4057:2:6"},"nodeType":"YulFunctionCall","src":"4057:34:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4050:6:6"},"nodeType":"YulFunctionCall","src":"4050:42:6"},"nodeType":"YulIf","src":"4047:62:6"}]},"name":"validator_revert_t_bytes8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4030:5:6","type":""}],"src":"3995:120:6"},{"body":{"nodeType":"YulBlock","src":"4172:86:6","statements":[{"nodeType":"YulAssignment","src":"4182:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4204:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4191:12:6"},"nodeType":"YulFunctionCall","src":"4191:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4182:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4246:5:6"}],"functionName":{"name":"validator_revert_t_bytes8","nodeType":"YulIdentifier","src":"4220:25:6"},"nodeType":"YulFunctionCall","src":"4220:32:6"},"nodeType":"YulExpressionStatement","src":"4220:32:6"}]},"name":"abi_decode_t_bytes8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4150:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"4158:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4166:5:6","type":""}],"src":"4121:137:6"},{"body":{"nodeType":"YulBlock","src":"4406:945:6","statements":[{"body":{"nodeType":"YulBlock","src":"4453:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4455:77:6"},"nodeType":"YulFunctionCall","src":"4455:79:6"},"nodeType":"YulExpressionStatement","src":"4455:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4427:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4436:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4423:3:6"},"nodeType":"YulFunctionCall","src":"4423:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4448:3:6","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4419:3:6"},"nodeType":"YulFunctionCall","src":"4419:33:6"},"nodeType":"YulIf","src":"4416:120:6"},{"nodeType":"YulBlock","src":"4546:286:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4561:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4592:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4603:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4588:3:6"},"nodeType":"YulFunctionCall","src":"4588:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4575:12:6"},"nodeType":"YulFunctionCall","src":"4575:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4565:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"4653:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4655:77:6"},"nodeType":"YulFunctionCall","src":"4655:79:6"},"nodeType":"YulExpressionStatement","src":"4655:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4625:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4633:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4622:2:6"},"nodeType":"YulFunctionCall","src":"4622:30:6"},"nodeType":"YulIf","src":"4619:117:6"},{"nodeType":"YulAssignment","src":"4750:72:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4794:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4805:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4790:3:6"},"nodeType":"YulFunctionCall","src":"4790:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4814:7:6"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4760:29:6"},"nodeType":"YulFunctionCall","src":"4760:62:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4750:6:6"}]}]},{"nodeType":"YulBlock","src":"4842:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4857:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4871:2:6","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4861:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4887:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4922:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4933:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4918:3:6"},"nodeType":"YulFunctionCall","src":"4918:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4942:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4897:20:6"},"nodeType":"YulFunctionCall","src":"4897:53:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4887:6:6"}]}]},{"nodeType":"YulBlock","src":"4970:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4985:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4999:2:6","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4989:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5015:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5050:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5061:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5046:3:6"},"nodeType":"YulFunctionCall","src":"5046:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5070:7:6"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5025:20:6"},"nodeType":"YulFunctionCall","src":"5025:53:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5015:6:6"}]}]},{"nodeType":"YulBlock","src":"5098:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5113:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"5127:2:6","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5117:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5143:62:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5177:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5188:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5173:3:6"},"nodeType":"YulFunctionCall","src":"5173:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5197:7:6"}],"functionName":{"name":"abi_decode_t_bytes8","nodeType":"YulIdentifier","src":"5153:19:6"},"nodeType":"YulFunctionCall","src":"5153:52:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5143:6:6"}]}]},{"nodeType":"YulBlock","src":"5225:119:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5240:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"5254:3:6","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5244:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5271:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5306:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5317:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5302:3:6"},"nodeType":"YulFunctionCall","src":"5302:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5326:7:6"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5281:20:6"},"nodeType":"YulFunctionCall","src":"5281:53:6"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5271:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptrt_uint256t_bytes32t_bytes8t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4344:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4355:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4367:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4375:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4383:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4391:6:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4399:6:6","type":""}],"src":"4264:1087:6"},{"body":{"nodeType":"YulBlock","src":"5385:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5402:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5405:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5395:6:6"},"nodeType":"YulFunctionCall","src":"5395:88:6"},"nodeType":"YulExpressionStatement","src":"5395:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5499:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5502:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5492:6:6"},"nodeType":"YulFunctionCall","src":"5492:15:6"},"nodeType":"YulExpressionStatement","src":"5492:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5523:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5526:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5516:6:6"},"nodeType":"YulFunctionCall","src":"5516:15:6"},"nodeType":"YulExpressionStatement","src":"5516:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"5357:180:6"},{"body":{"nodeType":"YulBlock","src":"5608:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5625:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5648:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5630:17:6"},"nodeType":"YulFunctionCall","src":"5630:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5618:6:6"},"nodeType":"YulFunctionCall","src":"5618:37:6"},"nodeType":"YulExpressionStatement","src":"5618:37:6"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5596:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5603:3:6","type":""}],"src":"5543:118:6"},{"body":{"nodeType":"YulBlock","src":"5821:288:6","statements":[{"nodeType":"YulAssignment","src":"5831:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5843:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5854:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5839:3:6"},"nodeType":"YulFunctionCall","src":"5839:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5831:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5911:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5924:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5920:3:6"},"nodeType":"YulFunctionCall","src":"5920:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5867:43:6"},"nodeType":"YulFunctionCall","src":"5867:71:6"},"nodeType":"YulExpressionStatement","src":"5867:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5992:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6005:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6016:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6001:3:6"},"nodeType":"YulFunctionCall","src":"6001:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5948:43:6"},"nodeType":"YulFunctionCall","src":"5948:72:6"},"nodeType":"YulExpressionStatement","src":"5948:72:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6074:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6087:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6098:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6083:3:6"},"nodeType":"YulFunctionCall","src":"6083:18:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6030:43:6"},"nodeType":"YulFunctionCall","src":"6030:72:6"},"nodeType":"YulExpressionStatement","src":"6030:72:6"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes32__to_t_address_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5777:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5789:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5797:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5805:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5816:4:6","type":""}],"src":"5667:442:6"},{"body":{"nodeType":"YulBlock","src":"6297:371:6","statements":[{"nodeType":"YulAssignment","src":"6307:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6319:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6330:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6315:3:6"},"nodeType":"YulFunctionCall","src":"6315:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6307:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6388:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6401:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6412:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6397:3:6"},"nodeType":"YulFunctionCall","src":"6397:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6344:43:6"},"nodeType":"YulFunctionCall","src":"6344:71:6"},"nodeType":"YulExpressionStatement","src":"6344:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6469:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:6"},"nodeType":"YulFunctionCall","src":"6478:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6425:43:6"},"nodeType":"YulFunctionCall","src":"6425:72:6"},"nodeType":"YulExpressionStatement","src":"6425:72:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6551:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6564:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6575:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6560:3:6"},"nodeType":"YulFunctionCall","src":"6560:18:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6507:43:6"},"nodeType":"YulFunctionCall","src":"6507:72:6"},"nodeType":"YulExpressionStatement","src":"6507:72:6"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6633:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6646:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6657:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:6"},"nodeType":"YulFunctionCall","src":"6642:18:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6589:43:6"},"nodeType":"YulFunctionCall","src":"6589:72:6"},"nodeType":"YulExpressionStatement","src":"6589:72:6"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6245:9:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6257:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6265:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6273:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6281:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6292:4:6","type":""}],"src":"6115:553:6"},{"body":{"nodeType":"YulBlock","src":"6720:32:6","statements":[{"nodeType":"YulAssignment","src":"6730:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"6741:5:6"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"6730:7:6"}]}]},"name":"leftAlign_t_bytes8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6702:5:6","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"6712:7:6","type":""}],"src":"6674:78:6"},{"body":{"nodeType":"YulBlock","src":"6839:72:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6856:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6897:5:6"}],"functionName":{"name":"cleanup_t_bytes8","nodeType":"YulIdentifier","src":"6880:16:6"},"nodeType":"YulFunctionCall","src":"6880:23:6"}],"functionName":{"name":"leftAlign_t_bytes8","nodeType":"YulIdentifier","src":"6861:18:6"},"nodeType":"YulFunctionCall","src":"6861:43:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6849:6:6"},"nodeType":"YulFunctionCall","src":"6849:56:6"},"nodeType":"YulExpressionStatement","src":"6849:56:6"}]},"name":"abi_encode_t_bytes8_to_t_bytes8_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6827:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6834:3:6","type":""}],"src":"6758:153:6"},{"body":{"nodeType":"YulBlock","src":"6964:32:6","statements":[{"nodeType":"YulAssignment","src":"6974:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"6985:5:6"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"6974:7:6"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6946:5:6","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"6956:7:6","type":""}],"src":"6917:79:6"},{"body":{"nodeType":"YulBlock","src":"7085:74:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7102:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7145:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7127:17:6"},"nodeType":"YulFunctionCall","src":"7127:24:6"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"7107:19:6"},"nodeType":"YulFunctionCall","src":"7107:45:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7095:6:6"},"nodeType":"YulFunctionCall","src":"7095:58:6"},"nodeType":"YulExpressionStatement","src":"7095:58:6"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7073:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7080:3:6","type":""}],"src":"7002:157:6"},{"body":{"nodeType":"YulBlock","src":"7212:32:6","statements":[{"nodeType":"YulAssignment","src":"7222:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"7233:5:6"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"7222:7:6"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7194:5:6","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"7204:7:6","type":""}],"src":"7165:79:6"},{"body":{"nodeType":"YulBlock","src":"7333:74:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7350:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7393:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7375:17:6"},"nodeType":"YulFunctionCall","src":"7375:24:6"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"7355:19:6"},"nodeType":"YulFunctionCall","src":"7355:45:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7343:6:6"},"nodeType":"YulFunctionCall","src":"7343:58:6"},"nodeType":"YulExpressionStatement","src":"7343:58:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7321:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7328:3:6","type":""}],"src":"7250:157:6"},{"body":{"nodeType":"YulBlock","src":"7455:52:6","statements":[{"nodeType":"YulAssignment","src":"7465:35:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7490:2:6","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"7494:5:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7486:3:6"},"nodeType":"YulFunctionCall","src":"7486:14:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7465:8:6"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7436:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7446:8:6","type":""}],"src":"7413:94:6"},{"body":{"nodeType":"YulBlock","src":"7560:47:6","statements":[{"nodeType":"YulAssignment","src":"7570:31:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7595:5:6"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"7581:13:6"},"nodeType":"YulFunctionCall","src":"7581:20:6"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"7570:7:6"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7542:5:6","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"7552:7:6","type":""}],"src":"7513:94:6"},{"body":{"nodeType":"YulBlock","src":"7660:53:6","statements":[{"nodeType":"YulAssignment","src":"7670:37:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7701:5:6"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"7681:19:6"},"nodeType":"YulFunctionCall","src":"7681:26:6"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"7670:7:6"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7642:5:6","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"7652:7:6","type":""}],"src":"7613:100:6"},{"body":{"nodeType":"YulBlock","src":"7802:74:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7819:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7862:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7844:17:6"},"nodeType":"YulFunctionCall","src":"7844:24:6"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"7824:19:6"},"nodeType":"YulFunctionCall","src":"7824:45:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7812:6:6"},"nodeType":"YulFunctionCall","src":"7812:58:6"},"nodeType":"YulExpressionStatement","src":"7812:58:6"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7790:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7797:3:6","type":""}],"src":"7719:157:6"},{"body":{"nodeType":"YulBlock","src":"8108:589:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8179:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8188:3:6"}],"functionName":{"name":"abi_encode_t_bytes8_to_t_bytes8_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8119:59:6"},"nodeType":"YulFunctionCall","src":"8119:73:6"},"nodeType":"YulExpressionStatement","src":"8119:73:6"},{"nodeType":"YulAssignment","src":"8201:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8212:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8217:1:6","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8208:3:6"},"nodeType":"YulFunctionCall","src":"8208:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8201:3:6"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8291:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8300:3:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8229:61:6"},"nodeType":"YulFunctionCall","src":"8229:75:6"},"nodeType":"YulExpressionStatement","src":"8229:75:6"},{"nodeType":"YulAssignment","src":"8313:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8324:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8329:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8320:3:6"},"nodeType":"YulFunctionCall","src":"8320:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8313:3:6"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8404:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8413:3:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8342:61:6"},"nodeType":"YulFunctionCall","src":"8342:75:6"},"nodeType":"YulExpressionStatement","src":"8342:75:6"},{"nodeType":"YulAssignment","src":"8426:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8437:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8442:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8433:3:6"},"nodeType":"YulFunctionCall","src":"8433:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8426:3:6"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8517:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8526:3:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8455:61:6"},"nodeType":"YulFunctionCall","src":"8455:75:6"},"nodeType":"YulExpressionStatement","src":"8455:75:6"},{"nodeType":"YulAssignment","src":"8539:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8550:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8555:2:6","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8546:3:6"},"nodeType":"YulFunctionCall","src":"8546:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8539:3:6"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8630:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8639:3:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8568:61:6"},"nodeType":"YulFunctionCall","src":"8568:75:6"},"nodeType":"YulExpressionStatement","src":"8568:75:6"},{"nodeType":"YulAssignment","src":"8652:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8663:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8668:2:6","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8659:3:6"},"nodeType":"YulFunctionCall","src":"8659:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8652:3:6"}]},{"nodeType":"YulAssignment","src":"8681:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"8688:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8681:3:6"}]}]},"name":"abi_encode_tuple_packed_t_bytes8_t_bytes32_t_uint256_t_address_t_address__to_t_bytes8_t_bytes32_t_uint256_t_address_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8055:3:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8061:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8069:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8077:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8085:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8093:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8104:3:6","type":""}],"src":"7882:815:6"},{"body":{"nodeType":"YulBlock","src":"8761:40:6","statements":[{"nodeType":"YulAssignment","src":"8772:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8788:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8782:5:6"},"nodeType":"YulFunctionCall","src":"8782:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8772:6:6"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8744:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8754:6:6","type":""}],"src":"8703:98:6"},{"body":{"nodeType":"YulBlock","src":"8902:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8919:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"8924:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8912:6:6"},"nodeType":"YulFunctionCall","src":"8912:19:6"},"nodeType":"YulExpressionStatement","src":"8912:19:6"},{"nodeType":"YulAssignment","src":"8940:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8959:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8964:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8955:3:6"},"nodeType":"YulFunctionCall","src":"8955:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8940:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8874:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"8879:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8890:11:6","type":""}],"src":"8807:168:6"},{"body":{"nodeType":"YulBlock","src":"9030:258:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9040:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9049:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9044:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"9109:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9134:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"9139:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9130:3:6"},"nodeType":"YulFunctionCall","src":"9130:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9153:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"9158:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9149:3:6"},"nodeType":"YulFunctionCall","src":"9149:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9143:5:6"},"nodeType":"YulFunctionCall","src":"9143:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9123:6:6"},"nodeType":"YulFunctionCall","src":"9123:39:6"},"nodeType":"YulExpressionStatement","src":"9123:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9070:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"9073:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9067:2:6"},"nodeType":"YulFunctionCall","src":"9067:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9081:19:6","statements":[{"nodeType":"YulAssignment","src":"9083:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9092:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"9095:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9088:3:6"},"nodeType":"YulFunctionCall","src":"9088:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9083:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"9063:3:6","statements":[]},"src":"9059:113:6"},{"body":{"nodeType":"YulBlock","src":"9206:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9256:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9261:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9252:3:6"},"nodeType":"YulFunctionCall","src":"9252:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"9270:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9245:6:6"},"nodeType":"YulFunctionCall","src":"9245:27:6"},"nodeType":"YulExpressionStatement","src":"9245:27:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9187:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"9190:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9184:2:6"},"nodeType":"YulFunctionCall","src":"9184:13:6"},"nodeType":"YulIf","src":"9181:101:6"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9012:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9017:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"9022:6:6","type":""}],"src":"8981:307:6"},{"body":{"nodeType":"YulBlock","src":"9384:270:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9394:52:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9440:5:6"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9408:31:6"},"nodeType":"YulFunctionCall","src":"9408:38:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9398:6:6","type":""}]},{"nodeType":"YulAssignment","src":"9455:77:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9520:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9525:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9462:57:6"},"nodeType":"YulFunctionCall","src":"9462:70:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9455:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9567:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9574:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9563:3:6"},"nodeType":"YulFunctionCall","src":"9563:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"9581:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9586:6:6"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9541:21:6"},"nodeType":"YulFunctionCall","src":"9541:52:6"},"nodeType":"YulExpressionStatement","src":"9541:52:6"},{"nodeType":"YulAssignment","src":"9602:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9613:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9640:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9618:21:6"},"nodeType":"YulFunctionCall","src":"9618:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9609:3:6"},"nodeType":"YulFunctionCall","src":"9609:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9602:3:6"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9365:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9372:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9380:3:6","type":""}],"src":"9294:360:6"},{"body":{"nodeType":"YulBlock","src":"9804:275:6","statements":[{"nodeType":"YulAssignment","src":"9814:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9826:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9837:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9822:3:6"},"nodeType":"YulFunctionCall","src":"9822:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9814:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9894:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9907:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9918:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9903:3:6"},"nodeType":"YulFunctionCall","src":"9903:17:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9850:43:6"},"nodeType":"YulFunctionCall","src":"9850:71:6"},"nodeType":"YulExpressionStatement","src":"9850:71:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9942:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9953:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9938:3:6"},"nodeType":"YulFunctionCall","src":"9938:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9962:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"9968:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9958:3:6"},"nodeType":"YulFunctionCall","src":"9958:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9931:6:6"},"nodeType":"YulFunctionCall","src":"9931:48:6"},"nodeType":"YulExpressionStatement","src":"9931:48:6"},{"nodeType":"YulAssignment","src":"9988:84:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10058:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"10067:4:6"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9996:61:6"},"nodeType":"YulFunctionCall","src":"9996:76:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9988:4:6"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9768:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9780:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9788:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9799:4:6","type":""}],"src":"9660:419:6"},{"body":{"nodeType":"YulBlock","src":"10198:34:6","statements":[{"nodeType":"YulAssignment","src":"10208:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"10223:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10208:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10170:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"10175:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10186:11:6","type":""}],"src":"10085:147:6"},{"body":{"nodeType":"YulBlock","src":"10346:265:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10356:52:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10402:5:6"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10370:31:6"},"nodeType":"YulFunctionCall","src":"10370:38:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10360:6:6","type":""}]},{"nodeType":"YulAssignment","src":"10417:95:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10500:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"10505:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10424:75:6"},"nodeType":"YulFunctionCall","src":"10424:88:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10417:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10547:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10554:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10543:3:6"},"nodeType":"YulFunctionCall","src":"10543:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"10561:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"10566:6:6"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10521:21:6"},"nodeType":"YulFunctionCall","src":"10521:52:6"},"nodeType":"YulExpressionStatement","src":"10521:52:6"},{"nodeType":"YulAssignment","src":"10582:23:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10593:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"10598:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10589:3:6"},"nodeType":"YulFunctionCall","src":"10589:16:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10582:3:6"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10327:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10334:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10342:3:6","type":""}],"src":"10238:373:6"},{"body":{"nodeType":"YulBlock","src":"10751:137:6","statements":[{"nodeType":"YulAssignment","src":"10762:100:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10849:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"10858:3:6"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10769:79:6"},"nodeType":"YulFunctionCall","src":"10769:93:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10762:3:6"}]},{"nodeType":"YulAssignment","src":"10872:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"10879:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10872:3:6"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10730:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10736:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10747:3:6","type":""}],"src":"10617:271:6"},{"body":{"nodeType":"YulBlock","src":"10957:80:6","statements":[{"nodeType":"YulAssignment","src":"10967:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10982:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10976:5:6"},"nodeType":"YulFunctionCall","src":"10976:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10967:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11025:5:6"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10998:26:6"},"nodeType":"YulFunctionCall","src":"10998:33:6"},"nodeType":"YulExpressionStatement","src":"10998:33:6"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10935:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"10943:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10951:5:6","type":""}],"src":"10894:143:6"},{"body":{"nodeType":"YulBlock","src":"11120:274:6","statements":[{"body":{"nodeType":"YulBlock","src":"11166:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11168:77:6"},"nodeType":"YulFunctionCall","src":"11168:79:6"},"nodeType":"YulExpressionStatement","src":"11168:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11141:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"11150:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11137:3:6"},"nodeType":"YulFunctionCall","src":"11137:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"11162:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11133:3:6"},"nodeType":"YulFunctionCall","src":"11133:32:6"},"nodeType":"YulIf","src":"11130:119:6"},{"nodeType":"YulBlock","src":"11259:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11274:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"11288:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11278:6:6","type":""}]},{"nodeType":"YulAssignment","src":"11303:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11349:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"11360:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11345:3:6"},"nodeType":"YulFunctionCall","src":"11345:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11369:7:6"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"11313:31:6"},"nodeType":"YulFunctionCall","src":"11313:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11303:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11090:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11101:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11113:6:6","type":""}],"src":"11043:351:6"},{"body":{"nodeType":"YulBlock","src":"11443:43:6","statements":[{"nodeType":"YulAssignment","src":"11453:27:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11468:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"11475:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11464:3:6"},"nodeType":"YulFunctionCall","src":"11464:16:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11453:7:6"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11425:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11435:7:6","type":""}],"src":"11400:86:6"},{"body":{"nodeType":"YulBlock","src":"11553:51:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11570:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11591:5:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11575:15:6"},"nodeType":"YulFunctionCall","src":"11575:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11563:6:6"},"nodeType":"YulFunctionCall","src":"11563:35:6"},"nodeType":"YulExpressionStatement","src":"11563:35:6"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11541:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11548:3:6","type":""}],"src":"11492:112:6"},{"body":{"nodeType":"YulBlock","src":"11788:367:6","statements":[{"nodeType":"YulAssignment","src":"11798:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11810:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11821:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11806:3:6"},"nodeType":"YulFunctionCall","src":"11806:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11798:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11879:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11892:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11903:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11888:3:6"},"nodeType":"YulFunctionCall","src":"11888:17:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11835:43:6"},"nodeType":"YulFunctionCall","src":"11835:71:6"},"nodeType":"YulExpressionStatement","src":"11835:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11956:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11969:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11980:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11965:3:6"},"nodeType":"YulFunctionCall","src":"11965:18:6"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"11916:39:6"},"nodeType":"YulFunctionCall","src":"11916:68:6"},"nodeType":"YulExpressionStatement","src":"11916:68:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12038:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12051:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12062:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12047:3:6"},"nodeType":"YulFunctionCall","src":"12047:18:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11994:43:6"},"nodeType":"YulFunctionCall","src":"11994:72:6"},"nodeType":"YulExpressionStatement","src":"11994:72:6"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12120:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12133:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12144:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12129:3:6"},"nodeType":"YulFunctionCall","src":"12129:18:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12076:43:6"},"nodeType":"YulFunctionCall","src":"12076:72:6"},"nodeType":"YulExpressionStatement","src":"12076:72:6"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11736:9:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11748:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11756:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11764:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11772:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11783:4:6","type":""}],"src":"11610:545:6"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_bytes8(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes8(value) {\n        if iszero(eq(value, cleanup_t_bytes8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes8(value)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_uint256t_bytes32t_bytes8t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes32__to_t_address_t_address_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function leftAlign_t_bytes8(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes8_to_t_bytes8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes8(cleanup_t_bytes8(value)))\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes8_t_bytes32_t_uint256_t_address_t_address__to_t_bytes8_t_bytes32_t_uint256_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_bytes8_to_t_bytes8_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 8)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value4,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1039":[{"length":32,"start":121},{"length":32,"start":485},{"length":32,"start":618}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80631567802a1461003b578063e7c8432c14610059575b600080fd5b610043610075565b60405161005091906106ea565b60405180910390f35b610073600480360381019061006e9190610923565b61009d565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100e9858585856100fa565b6100f38382610247565b5050505050565b600080600061010a8686866102c8565b90506101168188610384565b809450819350505060006004811115610132576101316109ba565b5b836004811115610145576101446109ba565b5b1461017c576040517f87e8191900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061018983838a6103d6565b9050806101c2576040517f9730126700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fcd182b7b23d2cf25e3288287cb62a2c6f0ba73d649eea19849d24c1e7d896a5f7f000000000000000000000000000000000000000000000000000000000000000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604051610235939291906109f8565b60405180910390a15050505050505050565b7f84875ec6f3430e00bd9b7695549d51b10bbfe765476eeacbac0eaa1653e936917f000000000000000000000000000000000000000000000000000000000000000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846040516102bc9493929190610a2f565b60405180910390a15050565b60006001600085815260200190815260200160002060009054906101000a900460ff16610321576040517f2991015c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600086815260200190815260200160002060006101000a81548160ff0219169083151502179055508183853330604051602001610365959493929190610b1f565b6040516020818303038152906040528051906020012090509392505050565b6000806041835114156103c65760008060006020860151925060408601519150606086015160001a90506103ba8782858561059c565b945094505050506103cf565b60006002915091505b9250929050565b60008060006103e58585610384565b91509150600060048111156103fd576103fc6109ba565b5b8160048111156104105761040f6109ba565b5b14801561044857508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b1561045857600192505050610595565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b888860405160240161048d929190610c06565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104f79190610c72565b600060405180830381855afa9150503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b509150915081801561054a575060208151145b801561058e5750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168180602001905181019061058c9190610c9e565b145b9450505050505b9392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156105d75760006003915091506106a0565b601b8560ff16141580156105ef5750601c8560ff1614155b156106015760006004915091506106a0565b6000600187878787604051600081526020016040526040516106269493929190610ce7565b6020604051602081039080840390855afa158015610648573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610697576000600192509250506106a0565b80600092509250505b94509492505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d4826106a9565b9050919050565b6106e4816106c9565b82525050565b60006020820190506106ff60008301846106db565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61076c82610723565b810181811067ffffffffffffffff8211171561078b5761078a610734565b5b80604052505050565b600061079e610705565b90506107aa8282610763565b919050565b600067ffffffffffffffff8211156107ca576107c9610734565b5b6107d382610723565b9050602081019050919050565b82818337600083830152505050565b60006108026107fd846107af565b610794565b90508281526020810184848401111561081e5761081d61071e565b5b6108298482856107e0565b509392505050565b600082601f83011261084657610845610719565b5b81356108568482602086016107ef565b91505092915050565b6000819050919050565b6108728161085f565b811461087d57600080fd5b50565b60008135905061088f81610869565b92915050565b6000819050919050565b6108a881610895565b81146108b357600080fd5b50565b6000813590506108c58161089f565b92915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b610900816108cb565b811461090b57600080fd5b50565b60008135905061091d816108f7565b92915050565b600080600080600060a0868803121561093f5761093e61070f565b5b600086013567ffffffffffffffff81111561095d5761095c610714565b5b61096988828901610831565b955050602061097a88828901610880565b945050604061098b888289016108b6565b935050606061099c8882890161090e565b92505060806109ad888289016108b6565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6109f281610895565b82525050565b6000606082019050610a0d60008301866106db565b610a1a60208301856106db565b610a2760408301846109e9565b949350505050565b6000608082019050610a4460008301876106db565b610a5160208301866106db565b610a5e60408301856109e9565b610a6b60608301846109e9565b95945050505050565b6000819050919050565b610a8f610a8a826108cb565b610a74565b82525050565b6000819050919050565b610ab0610aab82610895565b610a95565b82525050565b6000819050919050565b610ad1610acc8261085f565b610ab6565b82525050565b60008160601b9050919050565b6000610aef82610ad7565b9050919050565b6000610b0182610ae4565b9050919050565b610b19610b14826106c9565b610af6565b82525050565b6000610b2b8288610a7e565b600882019150610b3b8287610a9f565b602082019150610b4b8286610ac0565b602082019150610b5b8285610b08565b601482019150610b6b8284610b08565b6014820191508190509695505050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bb8578082015181840152602081019050610b9d565b83811115610bc7576000848401525b50505050565b6000610bd882610b7e565b610be28185610b89565b9350610bf2818560208601610b9a565b610bfb81610723565b840191505092915050565b6000604082019050610c1b60008301856109e9565b8181036020830152610c2d8184610bcd565b90509392505050565b600081905092915050565b6000610c4c82610b7e565b610c568185610c36565b9350610c66818560208601610b9a565b80840191505092915050565b6000610c7e8284610c41565b915081905092915050565b600081519050610c988161089f565b92915050565b600060208284031215610cb457610cb361070f565b5b6000610cc284828501610c89565b91505092915050565b600060ff82169050919050565b610ce181610ccb565b82525050565b6000608082019050610cfc60008301876109e9565b610d096020830186610cd8565b610d1660408301856109e9565b610d2360608301846109e9565b9594505050505056fea264697066735822122066d119621a9b72c17407463b8743960df5379154a7962c3008d4a6780de6265164736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1567802A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE7C8432C EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE9 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFA JUMP JUMPDEST PUSH2 0xF3 DUP4 DUP3 PUSH2 0x247 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x10A DUP7 DUP7 DUP7 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x116 DUP2 DUP9 PUSH2 0x384 JUMP JUMPDEST DUP1 SWAP5 POP DUP2 SWAP4 POP POP POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0x9BA JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x145 JUMPI PUSH2 0x144 PUSH2 0x9BA JUMP JUMPDEST JUMPDEST EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH32 0x87E8191900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x189 DUP4 DUP4 DUP11 PUSH2 0x3D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9730126700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xCD182B7B23D2CF25E3288287CB62A2C6F0BA73D649EEA19849D24C1E7D896A5F PUSH32 0x0 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x235 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x84875EC6F3430E00BD9B7695549D51B10BBFE765476EEACBAC0EAA1653E93691 PUSH32 0x0 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2991015C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP4 DUP6 CALLER ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x365 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD EQ ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x3BA DUP8 DUP3 DUP6 DUP6 PUSH2 0x59C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3E5 DUP6 DUP6 PUSH2 0x384 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3FC PUSH2 0x9BA JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0x9BA JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x448 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x458 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x48D SWAP3 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x537 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x54A JUMPI POP PUSH1 0x20 DUP2 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x58E JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0xC9E JUMP JUMPDEST EQ JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1B DUP6 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5EF JUMPI POP PUSH1 0x1C DUP6 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP2 POP SWAP2 POP PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x626 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x648 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x6A0 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D4 DUP3 PUSH2 0x6A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E4 DUP2 PUSH2 0x6C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x76C DUP3 PUSH2 0x723 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x734 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E PUSH2 0x705 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP3 DUP3 PUSH2 0x763 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x734 JUMP JUMPDEST JUMPDEST PUSH2 0x7D3 DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 PUSH2 0x7FD DUP5 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x71E JUMP JUMPDEST JUMPDEST PUSH2 0x829 DUP5 DUP3 DUP6 PUSH2 0x7E0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x846 JUMPI PUSH2 0x845 PUSH2 0x719 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x856 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x872 DUP2 PUSH2 0x85F JUMP JUMPDEST DUP2 EQ PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88F DUP2 PUSH2 0x869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0x895 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C5 DUP2 PUSH2 0x89F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x8CB JUMP JUMPDEST DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x91D DUP2 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93E PUSH2 0x70F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x714 JUMP JUMPDEST JUMPDEST PUSH2 0x969 DUP9 DUP3 DUP10 ADD PUSH2 0x831 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x97A DUP9 DUP3 DUP10 ADD PUSH2 0x880 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x98B DUP9 DUP3 DUP10 ADD PUSH2 0x8B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x99C DUP9 DUP3 DUP10 ADD PUSH2 0x90E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x9AD DUP9 DUP3 DUP10 ADD PUSH2 0x8B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9F2 DUP2 PUSH2 0x895 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA0D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA1A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA27 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xA44 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA51 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0xA5E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xA6B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8F PUSH2 0xA8A DUP3 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0xA74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0xAAB DUP3 PUSH2 0x895 JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD1 PUSH2 0xACC DUP3 PUSH2 0x85F JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEF DUP3 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB01 DUP3 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB19 PUSH2 0xB14 DUP3 PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2B DUP3 DUP9 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP PUSH2 0xB3B DUP3 DUP8 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xB4B DUP3 DUP7 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xB5B DUP3 DUP6 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB6B DUP3 DUP5 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBB8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB9D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD8 DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0xBE2 DUP2 DUP6 PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP PUSH2 0xBF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST PUSH2 0xBFB DUP2 PUSH2 0x723 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC1B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9E9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 DUP5 PUSH2 0xBCD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4C DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0xC56 DUP2 DUP6 PUSH2 0xC36 JUMP JUMPDEST SWAP4 POP PUSH2 0xC66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB9A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7E DUP3 DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC98 DUP2 PUSH2 0x89F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x70F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP5 DUP3 DUP6 ADD PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xCFC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xD09 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xD16 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0xD23 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x9E9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD119621A9B72C1 PUSH21 0x7463B8743960DF5379154A7962C3008D4A6780DE6 0x26 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"343:2685:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;920:433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2932:91;2982:7;3008;3001:14;;2932:91;:::o;920:433::-;1153:10;1139:11;;:24;;;;;;;;;;;;;;;;;;1203:50;1218:9;1229:5;1236:9;1247:5;1203:13;:50::i;:::-;1316:29;1325:9;1336:8;1316;:29::i;:::-;920:433;;;;;:::o;1361:884::-;1543:37;1591:14;1642:20;1665:40;1681:5;1688:9;1699:5;1665:15;:40::i;:::-;1642:63;;1782:41;1799:12;1813:9;1782:16;:41::i;:::-;1751:72;;;;;;;;1859:26;1837:48;;;;;;;;:::i;:::-;;:18;:48;;;;;;;;:::i;:::-;;;1834:91;;1894:31;;;;;;;;;;;;;;1834:91;1964:16;1983:69;2020:6;2028:12;2042:9;1983:36;:69::i;:::-;1964:88;;2067:11;2063:52;;2087:28;;;;;;;;;;;;;;2063:52;2174:53;2192:7;2201:11;;;;;;;;;;2214:12;2174:53;;;;;;;;:::i;:::-;;;;;;;;1511:734;;;;1361:884;;;;:::o;2253:153::-;2332:58;2348:7;2357:11;;;;;;;;;;2370:9;2381:8;2332:58;;;;;;;;;:::i;:::-;;;;;;;;2253:153;;:::o;2417:481::-;2550:7;2678:11;:18;2690:5;2678:18;;;;;;;;;;;;;;;;;;;;;2674:46;;2705:15;;;;;;;;;;;;;;2674:46;2752:4;2731:11;:18;2743:5;2731:18;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2829:5;2836:9;2847:5;2862:10;2883:4;2812:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2802:88;;;;;;2795:95;;2417:481;;;;;:::o;2243:730:3:-;2324:7;2333:12;2381:2;2361:9;:16;:22;2357:610;;;2399:9;2422;2445:7;2697:4;2686:9;2682:20;2676:27;2671:32;;2746:4;2735:9;2731:20;2725:27;2720:32;;2803:4;2792:9;2788:20;2782:27;2779:1;2774:36;2769:41;;2844:25;2855:4;2861:1;2864;2867;2844:10;:25::i;:::-;2837:32;;;;;;;;;2357:610;2916:1;2920:35;2900:56;;;;2243:730;;;;;;:::o;1039:667:4:-;1175:4;1192:17;1211:24;1239:33;1256:4;1262:9;1239:16;:33::i;:::-;1191:81;;;;1295:26;1286:35;;;;;;;;:::i;:::-;;:5;:35;;;;;;;;:::i;:::-;;;:58;;;;;1338:6;1325:19;;:9;:19;;;1286:58;1282:100;;;1367:4;1360:11;;;;;;1282:100;1393:12;1407:19;1430:6;:17;;1484:34;;;1520:4;1526:9;1461:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:116;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:154;;;;1564:7;:42;;;;;1604:2;1587:6;:13;:19;1564:42;:134;;;;;1663:34;;;1655:43;;;1633:6;1622:29;;;;;;;;;;;;:::i;:::-;:76;1564:134;1556:143;;;;;;1039:667;;;;;;:::o;5167:1603:3:-;5293:7;5302:12;6217:66;6212:1;6204:10;;:79;6200:161;;;6315:1;6319:30;6299:51;;;;;;6200:161;6379:2;6374:1;:7;;;;:18;;;;;6390:2;6385:1;:7;;;;6374:18;6370:100;;;6424:1;6428:30;6408:51;;;;;;6370:100;6564:14;6581:24;6591:4;6597:1;6600;6603;6581:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6564:41;;6637:1;6619:20;;:6;:20;;;6615:101;;;6671:1;6675:29;6655:50;;;;;;;6615:101;6734:6;6742:20;6726:37;;;;;5167:1603;;;;;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:117;1029:1;1026;1019:12;1043:117;1152:1;1149;1142:12;1166:102;1207:6;1258:2;1254:7;1249:2;1242:5;1238:14;1234:28;1224:38;;1166:102;;;:::o;1274:180::-;1322:77;1319:1;1312:88;1419:4;1416:1;1409:15;1443:4;1440:1;1433:15;1460:281;1543:27;1565:4;1543:27;:::i;:::-;1535:6;1531:40;1673:6;1661:10;1658:22;1637:18;1625:10;1622:34;1619:62;1616:88;;;1684:18;;:::i;:::-;1616:88;1724:10;1720:2;1713:22;1503:238;1460:281;;:::o;1747:129::-;1781:6;1808:20;;:::i;:::-;1798:30;;1837:33;1865:4;1857:6;1837:33;:::i;:::-;1747:129;;;:::o;1882:307::-;1943:4;2033:18;2025:6;2022:30;2019:56;;;2055:18;;:::i;:::-;2019:56;2093:29;2115:6;2093:29;:::i;:::-;2085:37;;2177:4;2171;2167:15;2159:23;;1882:307;;;:::o;2195:154::-;2279:6;2274:3;2269;2256:30;2341:1;2332:6;2327:3;2323:16;2316:27;2195:154;;;:::o;2355:410::-;2432:5;2457:65;2473:48;2514:6;2473:48;:::i;:::-;2457:65;:::i;:::-;2448:74;;2545:6;2538:5;2531:21;2583:4;2576:5;2572:16;2621:3;2612:6;2607:3;2603:16;2600:25;2597:112;;;2628:79;;:::i;:::-;2597:112;2718:41;2752:6;2747:3;2742;2718:41;:::i;:::-;2438:327;2355:410;;;;;:::o;2784:338::-;2839:5;2888:3;2881:4;2873:6;2869:17;2865:27;2855:122;;2896:79;;:::i;:::-;2855:122;3013:6;3000:20;3038:78;3112:3;3104:6;3097:4;3089:6;3085:17;3038:78;:::i;:::-;3029:87;;2845:277;2784:338;;;;:::o;3128:77::-;3165:7;3194:5;3183:16;;3128:77;;;:::o;3211:122::-;3284:24;3302:5;3284:24;:::i;:::-;3277:5;3274:35;3264:63;;3323:1;3320;3313:12;3264:63;3211:122;:::o;3339:139::-;3385:5;3423:6;3410:20;3401:29;;3439:33;3466:5;3439:33;:::i;:::-;3339:139;;;;:::o;3484:77::-;3521:7;3550:5;3539:16;;3484:77;;;:::o;3567:122::-;3640:24;3658:5;3640:24;:::i;:::-;3633:5;3630:35;3620:63;;3679:1;3676;3669:12;3620:63;3567:122;:::o;3695:139::-;3741:5;3779:6;3766:20;3757:29;;3795:33;3822:5;3795:33;:::i;:::-;3695:139;;;;:::o;3840:149::-;3876:7;3916:66;3909:5;3905:78;3894:89;;3840:149;;;:::o;3995:120::-;4067:23;4084:5;4067:23;:::i;:::-;4060:5;4057:34;4047:62;;4105:1;4102;4095:12;4047:62;3995:120;:::o;4121:137::-;4166:5;4204:6;4191:20;4182:29;;4220:32;4246:5;4220:32;:::i;:::-;4121:137;;;;:::o;4264:1087::-;4367:6;4375;4383;4391;4399;4448:3;4436:9;4427:7;4423:23;4419:33;4416:120;;;4455:79;;:::i;:::-;4416:120;4603:1;4592:9;4588:17;4575:31;4633:18;4625:6;4622:30;4619:117;;;4655:79;;:::i;:::-;4619:117;4760:62;4814:7;4805:6;4794:9;4790:22;4760:62;:::i;:::-;4750:72;;4546:286;4871:2;4897:53;4942:7;4933:6;4922:9;4918:22;4897:53;:::i;:::-;4887:63;;4842:118;4999:2;5025:53;5070:7;5061:6;5050:9;5046:22;5025:53;:::i;:::-;5015:63;;4970:118;5127:2;5153:52;5197:7;5188:6;5177:9;5173:22;5153:52;:::i;:::-;5143:62;;5098:117;5254:3;5281:53;5326:7;5317:6;5306:9;5302:22;5281:53;:::i;:::-;5271:63;;5225:119;4264:1087;;;;;;;;:::o;5357:180::-;5405:77;5402:1;5395:88;5502:4;5499:1;5492:15;5526:4;5523:1;5516:15;5543:118;5630:24;5648:5;5630:24;:::i;:::-;5625:3;5618:37;5543:118;;:::o;5667:442::-;5816:4;5854:2;5843:9;5839:18;5831:26;;5867:71;5935:1;5924:9;5920:17;5911:6;5867:71;:::i;:::-;5948:72;6016:2;6005:9;6001:18;5992:6;5948:72;:::i;:::-;6030;6098:2;6087:9;6083:18;6074:6;6030:72;:::i;:::-;5667:442;;;;;;:::o;6115:553::-;6292:4;6330:3;6319:9;6315:19;6307:27;;6344:71;6412:1;6401:9;6397:17;6388:6;6344:71;:::i;:::-;6425:72;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507;6575:2;6564:9;6560:18;6551:6;6507:72;:::i;:::-;6589;6657:2;6646:9;6642:18;6633:6;6589:72;:::i;:::-;6115:553;;;;;;;:::o;6674:78::-;6712:7;6741:5;6730:16;;6674:78;;;:::o;6758:153::-;6861:43;6880:23;6897:5;6880:23;:::i;:::-;6861:43;:::i;:::-;6856:3;6849:56;6758:153;;:::o;6917:79::-;6956:7;6985:5;6974:16;;6917:79;;;:::o;7002:157::-;7107:45;7127:24;7145:5;7127:24;:::i;:::-;7107:45;:::i;:::-;7102:3;7095:58;7002:157;;:::o;7165:79::-;7204:7;7233:5;7222:16;;7165:79;;;:::o;7250:157::-;7355:45;7375:24;7393:5;7375:24;:::i;:::-;7355:45;:::i;:::-;7350:3;7343:58;7250:157;;:::o;7413:94::-;7446:8;7494:5;7490:2;7486:14;7465:35;;7413:94;;;:::o;7513:::-;7552:7;7581:20;7595:5;7581:20;:::i;:::-;7570:31;;7513:94;;;:::o;7613:100::-;7652:7;7681:26;7701:5;7681:26;:::i;:::-;7670:37;;7613:100;;;:::o;7719:157::-;7824:45;7844:24;7862:5;7844:24;:::i;:::-;7824:45;:::i;:::-;7819:3;7812:58;7719:157;;:::o;7882:815::-;8104:3;8119:73;8188:3;8179:6;8119:73;:::i;:::-;8217:1;8212:3;8208:11;8201:18;;8229:75;8300:3;8291:6;8229:75;:::i;:::-;8329:2;8324:3;8320:12;8313:19;;8342:75;8413:3;8404:6;8342:75;:::i;:::-;8442:2;8437:3;8433:12;8426:19;;8455:75;8526:3;8517:6;8455:75;:::i;:::-;8555:2;8550:3;8546:12;8539:19;;8568:75;8639:3;8630:6;8568:75;:::i;:::-;8668:2;8663:3;8659:12;8652:19;;8688:3;8681:10;;7882:815;;;;;;;;:::o;8703:98::-;8754:6;8788:5;8782:12;8772:22;;8703:98;;;:::o;8807:168::-;8890:11;8924:6;8919:3;8912:19;8964:4;8959:3;8955:14;8940:29;;8807:168;;;;:::o;8981:307::-;9049:1;9059:113;9073:6;9070:1;9067:13;9059:113;;;9158:1;9153:3;9149:11;9143:18;9139:1;9134:3;9130:11;9123:39;9095:2;9092:1;9088:10;9083:15;;9059:113;;;9190:6;9187:1;9184:13;9181:101;;;9270:1;9261:6;9256:3;9252:16;9245:27;9181:101;9030:258;8981:307;;;:::o;9294:360::-;9380:3;9408:38;9440:5;9408:38;:::i;:::-;9462:70;9525:6;9520:3;9462:70;:::i;:::-;9455:77;;9541:52;9586:6;9581:3;9574:4;9567:5;9563:16;9541:52;:::i;:::-;9618:29;9640:6;9618:29;:::i;:::-;9613:3;9609:39;9602:46;;9384:270;9294:360;;;;:::o;9660:419::-;9799:4;9837:2;9826:9;9822:18;9814:26;;9850:71;9918:1;9907:9;9903:17;9894:6;9850:71;:::i;:::-;9968:9;9962:4;9958:20;9953:2;9942:9;9938:18;9931:48;9996:76;10067:4;10058:6;9996:76;:::i;:::-;9988:84;;9660:419;;;;;:::o;10085:147::-;10186:11;10223:3;10208:18;;10085:147;;;;:::o;10238:373::-;10342:3;10370:38;10402:5;10370:38;:::i;:::-;10424:88;10505:6;10500:3;10424:88;:::i;:::-;10417:95;;10521:52;10566:6;10561:3;10554:4;10547:5;10543:16;10521:52;:::i;:::-;10598:6;10593:3;10589:16;10582:23;;10346:265;10238:373;;;;:::o;10617:271::-;10747:3;10769:93;10858:3;10849:6;10769:93;:::i;:::-;10762:100;;10879:3;10872:10;;10617:271;;;;:::o;10894:143::-;10951:5;10982:6;10976:13;10967:22;;10998:33;11025:5;10998:33;:::i;:::-;10894:143;;;;:::o;11043:351::-;11113:6;11162:2;11150:9;11141:7;11137:23;11133:32;11130:119;;;11168:79;;:::i;:::-;11130:119;11288:1;11313:64;11369:7;11360:6;11349:9;11345:22;11313:64;:::i;:::-;11303:74;;11259:128;11043:351;;;;:::o;11400:86::-;11435:7;11475:4;11468:5;11464:16;11453:27;;11400:86;;;:::o;11492:112::-;11575:22;11591:5;11575:22;:::i;:::-;11570:3;11563:35;11492:112;;:::o;11610:545::-;11783:4;11821:3;11810:9;11806:19;11798:27;;11835:71;11903:1;11892:9;11888:17;11879:6;11835:71;:::i;:::-;11916:68;11980:2;11969:9;11965:18;11956:6;11916:68;:::i;:::-;11994:72;12062:2;12051:9;12047:18;12038:6;11994:72;:::i;:::-;12076;12144:2;12133:9;12129:18;12120:6;12076:72;:::i;:::-;11610:545;;;;;;;:::o"},"methodIdentifiers":{"getOwnerOfContract()":"1567802a","mainSignProcess(bytes,uint256,bytes32,bytes8,bytes32)":"e7c8432c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Invalid_Signature_By_Owner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Nonce_Is_Used\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerAddress_Recovery_Failed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ipfshash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"filehash\",\"type\":\"bytes32\"}],\"name\":\"RecepientSigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"msghash\",\"type\":\"bytes32\"}],\"name\":\"SignatureVerified\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getOwnerOfContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ipfs_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes8\",\"name\":\"msgId\",\"type\":\"bytes8\"},{\"internalType\":\"bytes32\",\"name\":\"filehash\",\"type\":\"bytes32\"}],\"name\":\"mainSignProcess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AffidavitSign.sol\":\"AffidavitSign\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"contracts/AffidavitSign.sol\":{\"keccak256\":\"0xefe2dc20acf39eb4e838936979814d1f236a473dfb047ffc906efe0559b0204c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6654b198cf3a2bddeeb6d97c914bb5c9fc4e36352c5e81ad7e300c4684de5071\",\"dweb:/ipfs/QmZ2BZ5cGC8SXjarrvvjBdi7nFSte3m3WXMbsqu8hzL9gC\"]}},\"version\":1}"}}}}}